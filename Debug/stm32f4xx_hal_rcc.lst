ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
  20              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  21              		.align	1
  22              		.weak	HAL_RCC_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_RCC_DeInit:
  28              	.LFB130:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * All rights reserved.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * the root directory of this software component.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz.
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx, STM32F43xxx, STM32F446xx, STM32F469xx and STM32F479xx devices,
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the maximum frequency of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz.
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_DeInit(void)
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 5


  29              		.loc 1 201 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
  39              		.loc 1 202 10
  40 0004 0023     		movs	r3, #0
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
  41              		.loc 1 203 1
  42 0006 1846     		mov	r0, r3
  43 0008 BD46     		mov	sp, r7
  44              		.cfi_def_cfa_register 13
  45              		@ sp needed
  46 000a 5DF8047B 		ldr	r7, [sp], #4
  47              		.cfi_restore 7
  48              		.cfi_def_cfa_offset 0
  49 000e 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE130:
  53              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  54              		.align	1
  55              		.weak	HAL_RCC_OscConfig
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	HAL_RCC_OscConfig:
  61              	.LFB131:
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  62              		.loc 1 220 1
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 24
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66 0000 80B5     		push	{r7, lr}
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 7, -8
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 6


  69              		.cfi_offset 14, -4
  70 0002 86B0     		sub	sp, sp, #24
  71              		.cfi_def_cfa_offset 32
  72 0004 00AF     		add	r7, sp, #0
  73              		.cfi_def_cfa_register 7
  74 0006 7860     		str	r0, [r7, #4]
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart, pll_config;
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
  75              		.loc 1 224 5
  76 0008 7B68     		ldr	r3, [r7, #4]
  77 000a 002B     		cmp	r3, #0
  78 000c 01D1     		bne	.L4
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
  79              		.loc 1 226 12
  80 000e 0123     		movs	r3, #1
  81 0010 67E2     		b	.L5
  82              	.L4:
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  83              		.loc 1 232 25
  84 0012 7B68     		ldr	r3, [r7, #4]
  85 0014 1B68     		ldr	r3, [r3]
  86              		.loc 1 232 43
  87 0016 03F00103 		and	r3, r3, #1
  88              		.loc 1 232 5
  89 001a 002B     		cmp	r3, #0
  90 001c 75D0     		beq	.L6
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
  91              		.loc 1 237 9
  92 001e 884B     		ldr	r3, .L59
  93 0020 9B68     		ldr	r3, [r3, #8]
  94 0022 03F00C03 		and	r3, r3, #12
  95              		.loc 1 237 7
  96 0026 042B     		cmp	r3, #4
  97 0028 0CD0     		beq	.L7
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
  98              		.loc 1 238 9 discriminator 1
  99 002a 854B     		ldr	r3, .L59
 100 002c 9B68     		ldr	r3, [r3, #8]
 101 002e 03F00C03 		and	r3, r3, #12
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 102              		.loc 1 237 60 discriminator 1
 103 0032 082B     		cmp	r3, #8
 104 0034 12D1     		bne	.L8
 105              		.loc 1 238 68
 106 0036 824B     		ldr	r3, .L59
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 7


 107 0038 5B68     		ldr	r3, [r3, #4]
 108              		.loc 1 238 78
 109 003a 03F48003 		and	r3, r3, #4194304
 110              		.loc 1 238 60
 111 003e B3F5800F 		cmp	r3, #4194304
 112 0042 0BD1     		bne	.L8
 113              	.L7:
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 114              		.loc 1 240 11
 115 0044 7E4B     		ldr	r3, .L59
 116 0046 1B68     		ldr	r3, [r3]
 117 0048 03F40033 		and	r3, r3, #131072
 118              		.loc 1 240 9
 119 004c 002B     		cmp	r3, #0
 120 004e 5BD0     		beq	.L58
 121              		.loc 1 240 78 discriminator 1
 122 0050 7B68     		ldr	r3, [r7, #4]
 123 0052 5B68     		ldr	r3, [r3, #4]
 124              		.loc 1 240 57 discriminator 1
 125 0054 002B     		cmp	r3, #0
 126 0056 57D1     		bne	.L58
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 127              		.loc 1 242 16
 128 0058 0123     		movs	r3, #1
 129 005a 42E2     		b	.L5
 130              	.L8:
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 131              		.loc 1 248 7
 132 005c 7B68     		ldr	r3, [r7, #4]
 133 005e 5B68     		ldr	r3, [r3, #4]
 134 0060 B3F5803F 		cmp	r3, #65536
 135 0064 06D1     		bne	.L10
 136              		.loc 1 248 7 is_stmt 0 discriminator 1
 137 0066 764B     		ldr	r3, .L59
 138 0068 1B68     		ldr	r3, [r3]
 139 006a 754A     		ldr	r2, .L59
 140 006c 43F48033 		orr	r3, r3, #65536
 141 0070 1360     		str	r3, [r2]
 142 0072 1DE0     		b	.L11
 143              	.L10:
 144              		.loc 1 248 7 discriminator 2
 145 0074 7B68     		ldr	r3, [r7, #4]
 146 0076 5B68     		ldr	r3, [r3, #4]
 147 0078 B3F5A02F 		cmp	r3, #327680
 148 007c 0CD1     		bne	.L12
 149              		.loc 1 248 7 discriminator 3
 150 007e 704B     		ldr	r3, .L59
 151 0080 1B68     		ldr	r3, [r3]
 152 0082 6F4A     		ldr	r2, .L59
 153 0084 43F48023 		orr	r3, r3, #262144
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 8


 154 0088 1360     		str	r3, [r2]
 155 008a 6D4B     		ldr	r3, .L59
 156 008c 1B68     		ldr	r3, [r3]
 157 008e 6C4A     		ldr	r2, .L59
 158 0090 43F48033 		orr	r3, r3, #65536
 159 0094 1360     		str	r3, [r2]
 160 0096 0BE0     		b	.L11
 161              	.L12:
 162              		.loc 1 248 7 discriminator 4
 163 0098 694B     		ldr	r3, .L59
 164 009a 1B68     		ldr	r3, [r3]
 165 009c 684A     		ldr	r2, .L59
 166 009e 23F48033 		bic	r3, r3, #65536
 167 00a2 1360     		str	r3, [r2]
 168 00a4 664B     		ldr	r3, .L59
 169 00a6 1B68     		ldr	r3, [r3]
 170 00a8 654A     		ldr	r2, .L59
 171 00aa 23F48023 		bic	r3, r3, #262144
 172 00ae 1360     		str	r3, [r2]
 173              	.L11:
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 174              		.loc 1 251 28 is_stmt 1
 175 00b0 7B68     		ldr	r3, [r7, #4]
 176 00b2 5B68     		ldr	r3, [r3, #4]
 177              		.loc 1 251 9
 178 00b4 002B     		cmp	r3, #0
 179 00b6 13D0     		beq	.L13
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 180              		.loc 1 254 21
 181 00b8 FFF7FEFF 		bl	HAL_GetTick
 182 00bc 3861     		str	r0, [r7, #16]
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 183              		.loc 1 257 14
 184 00be 08E0     		b	.L14
 185              	.L15:
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 186              		.loc 1 259 15
 187 00c0 FFF7FEFF 		bl	HAL_GetTick
 188 00c4 0246     		mov	r2, r0
 189              		.loc 1 259 29
 190 00c6 3B69     		ldr	r3, [r7, #16]
 191 00c8 D31A     		subs	r3, r2, r3
 192              		.loc 1 259 13
 193 00ca 642B     		cmp	r3, #100
 194 00cc 01D9     		bls	.L14
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 195              		.loc 1 261 20
 196 00ce 0323     		movs	r3, #3
 197 00d0 07E2     		b	.L5
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 9


 198              	.L14:
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 199              		.loc 1 257 15
 200 00d2 5B4B     		ldr	r3, .L59
 201 00d4 1B68     		ldr	r3, [r3]
 202 00d6 03F40033 		and	r3, r3, #131072
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 203              		.loc 1 257 51
 204 00da 002B     		cmp	r3, #0
 205 00dc F0D0     		beq	.L15
 206 00de 14E0     		b	.L6
 207              	.L13:
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 208              		.loc 1 268 21
 209 00e0 FFF7FEFF 		bl	HAL_GetTick
 210 00e4 3861     		str	r0, [r7, #16]
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 211              		.loc 1 271 14
 212 00e6 08E0     		b	.L16
 213              	.L17:
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 214              		.loc 1 273 15
 215 00e8 FFF7FEFF 		bl	HAL_GetTick
 216 00ec 0246     		mov	r2, r0
 217              		.loc 1 273 29
 218 00ee 3B69     		ldr	r3, [r7, #16]
 219 00f0 D31A     		subs	r3, r2, r3
 220              		.loc 1 273 13
 221 00f2 642B     		cmp	r3, #100
 222 00f4 01D9     		bls	.L16
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 223              		.loc 1 275 20
 224 00f6 0323     		movs	r3, #3
 225 00f8 F3E1     		b	.L5
 226              	.L16:
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 227              		.loc 1 271 15
 228 00fa 514B     		ldr	r3, .L59
 229 00fc 1B68     		ldr	r3, [r3]
 230 00fe 03F40033 		and	r3, r3, #131072
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 231              		.loc 1 271 51
 232 0102 002B     		cmp	r3, #0
 233 0104 F0D1     		bne	.L17
 234 0106 00E0     		b	.L6
 235              	.L58:
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 10


 236              		.loc 1 240 9
 237 0108 00BF     		nop
 238              	.L6:
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 239              		.loc 1 282 25
 240 010a 7B68     		ldr	r3, [r7, #4]
 241 010c 1B68     		ldr	r3, [r3]
 242              		.loc 1 282 43
 243 010e 03F00203 		and	r3, r3, #2
 244              		.loc 1 282 5
 245 0112 002B     		cmp	r3, #0
 246 0114 63D0     		beq	.L18
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 247              		.loc 1 289 9
 248 0116 4A4B     		ldr	r3, .L59
 249 0118 9B68     		ldr	r3, [r3, #8]
 250 011a 03F00C03 		and	r3, r3, #12
 251              		.loc 1 289 7
 252 011e 002B     		cmp	r3, #0
 253 0120 0BD0     		beq	.L19
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 254              		.loc 1 290 9 discriminator 1
 255 0122 474B     		ldr	r3, .L59
 256 0124 9B68     		ldr	r3, [r3, #8]
 257 0126 03F00C03 		and	r3, r3, #12
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 258              		.loc 1 289 60 discriminator 1
 259 012a 082B     		cmp	r3, #8
 260 012c 1CD1     		bne	.L20
 261              		.loc 1 290 68
 262 012e 444B     		ldr	r3, .L59
 263 0130 5B68     		ldr	r3, [r3, #4]
 264              		.loc 1 290 78
 265 0132 03F48003 		and	r3, r3, #4194304
 266              		.loc 1 290 60
 267 0136 002B     		cmp	r3, #0
 268 0138 16D1     		bne	.L20
 269              	.L19:
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 270              		.loc 1 293 11
 271 013a 414B     		ldr	r3, .L59
 272 013c 1B68     		ldr	r3, [r3]
 273 013e 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 11


 274              		.loc 1 293 9
 275 0142 002B     		cmp	r3, #0
 276 0144 05D0     		beq	.L21
 277              		.loc 1 293 78 discriminator 1
 278 0146 7B68     		ldr	r3, [r7, #4]
 279 0148 DB68     		ldr	r3, [r3, #12]
 280              		.loc 1 293 57 discriminator 1
 281 014a 012B     		cmp	r3, #1
 282 014c 01D0     		beq	.L21
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 283              		.loc 1 295 16
 284 014e 0123     		movs	r3, #1
 285 0150 C7E1     		b	.L5
 286              	.L21:
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 287              		.loc 1 301 9
 288 0152 3B4B     		ldr	r3, .L59
 289 0154 1B68     		ldr	r3, [r3]
 290 0156 23F0F802 		bic	r2, r3, #248
 291 015a 7B68     		ldr	r3, [r7, #4]
 292 015c 1B69     		ldr	r3, [r3, #16]
 293 015e DB00     		lsls	r3, r3, #3
 294 0160 3749     		ldr	r1, .L59
 295 0162 1343     		orrs	r3, r3, r2
 296 0164 0B60     		str	r3, [r1]
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 297              		.loc 1 293 9
 298 0166 3AE0     		b	.L18
 299              	.L20:
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 300              		.loc 1 307 28
 301 0168 7B68     		ldr	r3, [r7, #4]
 302 016a DB68     		ldr	r3, [r3, #12]
 303              		.loc 1 307 9
 304 016c 002B     		cmp	r3, #0
 305 016e 20D0     		beq	.L22
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 306              		.loc 1 310 9
 307 0170 344B     		ldr	r3, .L59+4
 308 0172 0122     		movs	r2, #1
 309 0174 1A60     		str	r2, [r3]
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 12


 310              		.loc 1 313 21
 311 0176 FFF7FEFF 		bl	HAL_GetTick
 312 017a 3861     		str	r0, [r7, #16]
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 313              		.loc 1 316 14
 314 017c 08E0     		b	.L23
 315              	.L24:
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 316              		.loc 1 318 15
 317 017e FFF7FEFF 		bl	HAL_GetTick
 318 0182 0246     		mov	r2, r0
 319              		.loc 1 318 29
 320 0184 3B69     		ldr	r3, [r7, #16]
 321 0186 D31A     		subs	r3, r2, r3
 322              		.loc 1 318 13
 323 0188 022B     		cmp	r3, #2
 324 018a 01D9     		bls	.L23
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 325              		.loc 1 320 20
 326 018c 0323     		movs	r3, #3
 327 018e A8E1     		b	.L5
 328              	.L23:
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 329              		.loc 1 316 15
 330 0190 2B4B     		ldr	r3, .L59
 331 0192 1B68     		ldr	r3, [r3]
 332 0194 03F00203 		and	r3, r3, #2
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 333              		.loc 1 316 51
 334 0198 002B     		cmp	r3, #0
 335 019a F0D0     		beq	.L24
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 336              		.loc 1 325 9
 337 019c 284B     		ldr	r3, .L59
 338 019e 1B68     		ldr	r3, [r3]
 339 01a0 23F0F802 		bic	r2, r3, #248
 340 01a4 7B68     		ldr	r3, [r7, #4]
 341 01a6 1B69     		ldr	r3, [r3, #16]
 342 01a8 DB00     		lsls	r3, r3, #3
 343 01aa 2549     		ldr	r1, .L59
 344 01ac 1343     		orrs	r3, r3, r2
 345 01ae 0B60     		str	r3, [r1]
 346 01b0 15E0     		b	.L18
 347              	.L22:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 13


 348              		.loc 1 330 9
 349 01b2 244B     		ldr	r3, .L59+4
 350 01b4 0022     		movs	r2, #0
 351 01b6 1A60     		str	r2, [r3]
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 352              		.loc 1 333 21
 353 01b8 FFF7FEFF 		bl	HAL_GetTick
 354 01bc 3861     		str	r0, [r7, #16]
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 355              		.loc 1 336 14
 356 01be 08E0     		b	.L25
 357              	.L26:
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 358              		.loc 1 338 15
 359 01c0 FFF7FEFF 		bl	HAL_GetTick
 360 01c4 0246     		mov	r2, r0
 361              		.loc 1 338 29
 362 01c6 3B69     		ldr	r3, [r7, #16]
 363 01c8 D31A     		subs	r3, r2, r3
 364              		.loc 1 338 13
 365 01ca 022B     		cmp	r3, #2
 366 01cc 01D9     		bls	.L25
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 367              		.loc 1 340 20
 368 01ce 0323     		movs	r3, #3
 369 01d0 87E1     		b	.L5
 370              	.L25:
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 371              		.loc 1 336 15
 372 01d2 1B4B     		ldr	r3, .L59
 373 01d4 1B68     		ldr	r3, [r3]
 374 01d6 03F00203 		and	r3, r3, #2
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 375              		.loc 1 336 51
 376 01da 002B     		cmp	r3, #0
 377 01dc F0D1     		bne	.L26
 378              	.L18:
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 379              		.loc 1 347 25
 380 01de 7B68     		ldr	r3, [r7, #4]
 381 01e0 1B68     		ldr	r3, [r3]
 382              		.loc 1 347 43
 383 01e2 03F00803 		and	r3, r3, #8
 384              		.loc 1 347 5
 385 01e6 002B     		cmp	r3, #0
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 14


 386 01e8 36D0     		beq	.L27
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 387              		.loc 1 353 26
 388 01ea 7B68     		ldr	r3, [r7, #4]
 389 01ec 5B69     		ldr	r3, [r3, #20]
 390              		.loc 1 353 7
 391 01ee 002B     		cmp	r3, #0
 392 01f0 16D0     		beq	.L28
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 393              		.loc 1 356 7
 394 01f2 154B     		ldr	r3, .L59+8
 395 01f4 0122     		movs	r2, #1
 396 01f6 1A60     		str	r2, [r3]
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 397              		.loc 1 359 19
 398 01f8 FFF7FEFF 		bl	HAL_GetTick
 399 01fc 3861     		str	r0, [r7, #16]
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 400              		.loc 1 362 12
 401 01fe 08E0     		b	.L29
 402              	.L30:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 403              		.loc 1 364 13
 404 0200 FFF7FEFF 		bl	HAL_GetTick
 405 0204 0246     		mov	r2, r0
 406              		.loc 1 364 27
 407 0206 3B69     		ldr	r3, [r7, #16]
 408 0208 D31A     		subs	r3, r2, r3
 409              		.loc 1 364 11
 410 020a 022B     		cmp	r3, #2
 411 020c 01D9     		bls	.L29
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 412              		.loc 1 366 18
 413 020e 0323     		movs	r3, #3
 414 0210 67E1     		b	.L5
 415              	.L29:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 416              		.loc 1 362 13
 417 0212 0B4B     		ldr	r3, .L59
 418 0214 5B6F     		ldr	r3, [r3, #116]
 419 0216 03F00203 		and	r3, r3, #2
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 420              		.loc 1 362 49
 421 021a 002B     		cmp	r3, #0
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 15


 422 021c F0D0     		beq	.L30
 423 021e 1BE0     		b	.L27
 424              	.L28:
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 425              		.loc 1 373 7
 426 0220 094B     		ldr	r3, .L59+8
 427 0222 0022     		movs	r2, #0
 428 0224 1A60     		str	r2, [r3]
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 429              		.loc 1 376 19
 430 0226 FFF7FEFF 		bl	HAL_GetTick
 431 022a 3861     		str	r0, [r7, #16]
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 432              		.loc 1 379 12
 433 022c 0EE0     		b	.L31
 434              	.L32:
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 435              		.loc 1 381 13
 436 022e FFF7FEFF 		bl	HAL_GetTick
 437 0232 0246     		mov	r2, r0
 438              		.loc 1 381 27
 439 0234 3B69     		ldr	r3, [r7, #16]
 440 0236 D31A     		subs	r3, r2, r3
 441              		.loc 1 381 11
 442 0238 022B     		cmp	r3, #2
 443 023a 07D9     		bls	.L31
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 444              		.loc 1 383 18
 445 023c 0323     		movs	r3, #3
 446 023e 50E1     		b	.L5
 447              	.L60:
 448              		.align	2
 449              	.L59:
 450 0240 00380240 		.word	1073887232
 451 0244 00004742 		.word	1111949312
 452 0248 800E4742 		.word	1111953024
 453              	.L31:
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 454              		.loc 1 379 13
 455 024c 884B     		ldr	r3, .L61
 456 024e 5B6F     		ldr	r3, [r3, #116]
 457 0250 03F00203 		and	r3, r3, #2
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 458              		.loc 1 379 49
 459 0254 002B     		cmp	r3, #0
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 16


 460 0256 EAD1     		bne	.L32
 461              	.L27:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 462              		.loc 1 389 25
 463 0258 7B68     		ldr	r3, [r7, #4]
 464 025a 1B68     		ldr	r3, [r3]
 465              		.loc 1 389 43
 466 025c 03F00403 		and	r3, r3, #4
 467              		.loc 1 389 5
 468 0260 002B     		cmp	r3, #0
 469 0262 00F09780 		beq	.L33
 470              	.LBB2:
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 471              		.loc 1 391 22
 472 0266 0023     		movs	r3, #0
 473 0268 FB75     		strb	r3, [r7, #23]
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 474              		.loc 1 398 8
 475 026a 814B     		ldr	r3, .L61
 476 026c 1B6C     		ldr	r3, [r3, #64]
 477 026e 03F08053 		and	r3, r3, #268435456
 478              		.loc 1 398 7
 479 0272 002B     		cmp	r3, #0
 480 0274 0FD1     		bne	.L34
 481              	.LBB3:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 482              		.loc 1 400 7
 483 0276 0023     		movs	r3, #0
 484 0278 BB60     		str	r3, [r7, #8]
 485 027a 7D4B     		ldr	r3, .L61
 486 027c 1B6C     		ldr	r3, [r3, #64]
 487 027e 7C4A     		ldr	r2, .L61
 488 0280 43F08053 		orr	r3, r3, #268435456
 489 0284 1364     		str	r3, [r2, #64]
 490 0286 7A4B     		ldr	r3, .L61
 491 0288 1B6C     		ldr	r3, [r3, #64]
 492 028a 03F08053 		and	r3, r3, #268435456
 493 028e BB60     		str	r3, [r7, #8]
 494 0290 BB68     		ldr	r3, [r7, #8]
 495              	.LBE3:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pwrclkchanged = SET;
 496              		.loc 1 401 21
 497 0292 0123     		movs	r3, #1
 498 0294 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 17


 499              	.L34:
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 500              		.loc 1 404 8
 501 0296 774B     		ldr	r3, .L61+4
 502 0298 1B68     		ldr	r3, [r3]
 503 029a 03F48073 		and	r3, r3, #256
 504              		.loc 1 404 7
 505 029e 002B     		cmp	r3, #0
 506 02a0 18D1     		bne	.L35
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 507              		.loc 1 407 7
 508 02a2 744B     		ldr	r3, .L61+4
 509 02a4 1B68     		ldr	r3, [r3]
 510 02a6 734A     		ldr	r2, .L61+4
 511 02a8 43F48073 		orr	r3, r3, #256
 512 02ac 1360     		str	r3, [r2]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 513              		.loc 1 410 19
 514 02ae FFF7FEFF 		bl	HAL_GetTick
 515 02b2 3861     		str	r0, [r7, #16]
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 516              		.loc 1 412 12
 517 02b4 08E0     		b	.L36
 518              	.L37:
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 519              		.loc 1 414 13
 520 02b6 FFF7FEFF 		bl	HAL_GetTick
 521 02ba 0246     		mov	r2, r0
 522              		.loc 1 414 27
 523 02bc 3B69     		ldr	r3, [r7, #16]
 524 02be D31A     		subs	r3, r2, r3
 525              		.loc 1 414 11
 526 02c0 022B     		cmp	r3, #2
 527 02c2 01D9     		bls	.L36
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 528              		.loc 1 416 18
 529 02c4 0323     		movs	r3, #3
 530 02c6 0CE1     		b	.L5
 531              	.L36:
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 532              		.loc 1 412 13
 533 02c8 6A4B     		ldr	r3, .L61+4
 534 02ca 1B68     		ldr	r3, [r3]
 535 02cc 03F48073 		and	r3, r3, #256
 536 02d0 002B     		cmp	r3, #0
 537 02d2 F0D0     		beq	.L37
 538              	.L35:
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 18


 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 539              		.loc 1 422 5
 540 02d4 7B68     		ldr	r3, [r7, #4]
 541 02d6 9B68     		ldr	r3, [r3, #8]
 542 02d8 012B     		cmp	r3, #1
 543 02da 06D1     		bne	.L38
 544              		.loc 1 422 5 is_stmt 0 discriminator 1
 545 02dc 644B     		ldr	r3, .L61
 546 02de 1B6F     		ldr	r3, [r3, #112]
 547 02e0 634A     		ldr	r2, .L61
 548 02e2 43F00103 		orr	r3, r3, #1
 549 02e6 1367     		str	r3, [r2, #112]
 550 02e8 1CE0     		b	.L39
 551              	.L38:
 552              		.loc 1 422 5 discriminator 2
 553 02ea 7B68     		ldr	r3, [r7, #4]
 554 02ec 9B68     		ldr	r3, [r3, #8]
 555 02ee 052B     		cmp	r3, #5
 556 02f0 0CD1     		bne	.L40
 557              		.loc 1 422 5 discriminator 3
 558 02f2 5F4B     		ldr	r3, .L61
 559 02f4 1B6F     		ldr	r3, [r3, #112]
 560 02f6 5E4A     		ldr	r2, .L61
 561 02f8 43F00403 		orr	r3, r3, #4
 562 02fc 1367     		str	r3, [r2, #112]
 563 02fe 5C4B     		ldr	r3, .L61
 564 0300 1B6F     		ldr	r3, [r3, #112]
 565 0302 5B4A     		ldr	r2, .L61
 566 0304 43F00103 		orr	r3, r3, #1
 567 0308 1367     		str	r3, [r2, #112]
 568 030a 0BE0     		b	.L39
 569              	.L40:
 570              		.loc 1 422 5 discriminator 4
 571 030c 584B     		ldr	r3, .L61
 572 030e 1B6F     		ldr	r3, [r3, #112]
 573 0310 574A     		ldr	r2, .L61
 574 0312 23F00103 		bic	r3, r3, #1
 575 0316 1367     		str	r3, [r2, #112]
 576 0318 554B     		ldr	r3, .L61
 577 031a 1B6F     		ldr	r3, [r3, #112]
 578 031c 544A     		ldr	r2, .L61
 579 031e 23F00403 		bic	r3, r3, #4
 580 0322 1367     		str	r3, [r2, #112]
 581              	.L39:
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 582              		.loc 1 424 26 is_stmt 1
 583 0324 7B68     		ldr	r3, [r7, #4]
 584 0326 9B68     		ldr	r3, [r3, #8]
 585              		.loc 1 424 7
 586 0328 002B     		cmp	r3, #0
 587 032a 15D0     		beq	.L41
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 19


 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 588              		.loc 1 427 19
 589 032c FFF7FEFF 		bl	HAL_GetTick
 590 0330 3861     		str	r0, [r7, #16]
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 591              		.loc 1 430 12
 592 0332 0AE0     		b	.L42
 593              	.L43:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 594              		.loc 1 432 13
 595 0334 FFF7FEFF 		bl	HAL_GetTick
 596 0338 0246     		mov	r2, r0
 597              		.loc 1 432 27
 598 033a 3B69     		ldr	r3, [r7, #16]
 599 033c D31A     		subs	r3, r2, r3
 600              		.loc 1 432 11
 601 033e 41F28832 		movw	r2, #5000
 602 0342 9342     		cmp	r3, r2
 603 0344 01D9     		bls	.L42
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 604              		.loc 1 434 18
 605 0346 0323     		movs	r3, #3
 606 0348 CBE0     		b	.L5
 607              	.L42:
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 608              		.loc 1 430 13
 609 034a 494B     		ldr	r3, .L61
 610 034c 1B6F     		ldr	r3, [r3, #112]
 611 034e 03F00203 		and	r3, r3, #2
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 612              		.loc 1 430 49
 613 0352 002B     		cmp	r3, #0
 614 0354 EED0     		beq	.L43
 615 0356 14E0     		b	.L44
 616              	.L41:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 617              		.loc 1 441 19
 618 0358 FFF7FEFF 		bl	HAL_GetTick
 619 035c 3861     		str	r0, [r7, #16]
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 620              		.loc 1 444 12
 621 035e 0AE0     		b	.L45
 622              	.L46:
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 20


 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 623              		.loc 1 446 13
 624 0360 FFF7FEFF 		bl	HAL_GetTick
 625 0364 0246     		mov	r2, r0
 626              		.loc 1 446 27
 627 0366 3B69     		ldr	r3, [r7, #16]
 628 0368 D31A     		subs	r3, r2, r3
 629              		.loc 1 446 11
 630 036a 41F28832 		movw	r2, #5000
 631 036e 9342     		cmp	r3, r2
 632 0370 01D9     		bls	.L45
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 633              		.loc 1 448 18
 634 0372 0323     		movs	r3, #3
 635 0374 B5E0     		b	.L5
 636              	.L45:
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 637              		.loc 1 444 13
 638 0376 3E4B     		ldr	r3, .L61
 639 0378 1B6F     		ldr	r3, [r3, #112]
 640 037a 03F00203 		and	r3, r3, #2
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 641              		.loc 1 444 49
 642 037e 002B     		cmp	r3, #0
 643 0380 EED1     		bne	.L46
 644              	.L44:
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 645              		.loc 1 454 7
 646 0382 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 647 0384 012B     		cmp	r3, #1
 648 0386 05D1     		bne	.L33
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 649              		.loc 1 456 7
 650 0388 394B     		ldr	r3, .L61
 651 038a 1B6C     		ldr	r3, [r3, #64]
 652 038c 384A     		ldr	r2, .L61
 653 038e 23F08053 		bic	r3, r3, #268435456
 654 0392 1364     		str	r3, [r2, #64]
 655              	.L33:
 656              	.LBE2:
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 657              		.loc 1 462 30
 658 0394 7B68     		ldr	r3, [r7, #4]
 659 0396 9B69     		ldr	r3, [r3, #24]
 660              		.loc 1 462 6
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 21


 661 0398 002B     		cmp	r3, #0
 662 039a 00F0A180 		beq	.L47
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 663              		.loc 1 465 8
 664 039e 344B     		ldr	r3, .L61
 665 03a0 9B68     		ldr	r3, [r3, #8]
 666 03a2 03F00C03 		and	r3, r3, #12
 667              		.loc 1 465 7
 668 03a6 082B     		cmp	r3, #8
 669 03a8 5CD0     		beq	.L48
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 670              		.loc 1 467 33
 671 03aa 7B68     		ldr	r3, [r7, #4]
 672 03ac 9B69     		ldr	r3, [r3, #24]
 673              		.loc 1 467 9
 674 03ae 022B     		cmp	r3, #2
 675 03b0 41D1     		bne	.L49
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 676              		.loc 1 477 9
 677 03b2 314B     		ldr	r3, .L61+8
 678 03b4 0022     		movs	r2, #0
 679 03b6 1A60     		str	r2, [r3]
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 680              		.loc 1 480 21
 681 03b8 FFF7FEFF 		bl	HAL_GetTick
 682 03bc 3861     		str	r0, [r7, #16]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 683              		.loc 1 483 14
 684 03be 08E0     		b	.L50
 685              	.L51:
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 686              		.loc 1 485 15
 687 03c0 FFF7FEFF 		bl	HAL_GetTick
 688 03c4 0246     		mov	r2, r0
 689              		.loc 1 485 29
 690 03c6 3B69     		ldr	r3, [r7, #16]
 691 03c8 D31A     		subs	r3, r2, r3
 692              		.loc 1 485 13
 693 03ca 022B     		cmp	r3, #2
 694 03cc 01D9     		bls	.L50
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 22


 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 695              		.loc 1 487 20
 696 03ce 0323     		movs	r3, #3
 697 03d0 87E0     		b	.L5
 698              	.L50:
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 699              		.loc 1 483 15
 700 03d2 274B     		ldr	r3, .L61
 701 03d4 1B68     		ldr	r3, [r3]
 702 03d6 03F00073 		and	r3, r3, #33554432
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 703              		.loc 1 483 51
 704 03da 002B     		cmp	r3, #0
 705 03dc F0D1     		bne	.L51
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 706              		.loc 1 492 9
 707 03de 7B68     		ldr	r3, [r7, #4]
 708 03e0 DA69     		ldr	r2, [r3, #28]
 709 03e2 7B68     		ldr	r3, [r7, #4]
 710 03e4 1B6A     		ldr	r3, [r3, #32]
 711 03e6 1A43     		orrs	r2, r2, r3
 712 03e8 7B68     		ldr	r3, [r7, #4]
 713 03ea 5B6A     		ldr	r3, [r3, #36]
 714 03ec 9B01     		lsls	r3, r3, #6
 715 03ee 1A43     		orrs	r2, r2, r3
 716 03f0 7B68     		ldr	r3, [r7, #4]
 717 03f2 9B6A     		ldr	r3, [r3, #40]
 718 03f4 5B08     		lsrs	r3, r3, #1
 719 03f6 013B     		subs	r3, r3, #1
 720 03f8 1B04     		lsls	r3, r3, #16
 721 03fa 1A43     		orrs	r2, r2, r3
 722 03fc 7B68     		ldr	r3, [r7, #4]
 723 03fe DB6A     		ldr	r3, [r3, #44]
 724 0400 1B06     		lsls	r3, r3, #24
 725 0402 1B49     		ldr	r1, .L61
 726 0404 1343     		orrs	r3, r3, r2
 727 0406 4B60     		str	r3, [r1, #4]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Po
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 728              		.loc 1 498 9
 729 0408 1B4B     		ldr	r3, .L61+8
 730 040a 0122     		movs	r2, #1
 731 040c 1A60     		str	r2, [r3]
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 732              		.loc 1 501 21
 733 040e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 23


 734 0412 3861     		str	r0, [r7, #16]
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 735              		.loc 1 504 14
 736 0414 08E0     		b	.L52
 737              	.L53:
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 738              		.loc 1 506 15
 739 0416 FFF7FEFF 		bl	HAL_GetTick
 740 041a 0246     		mov	r2, r0
 741              		.loc 1 506 29
 742 041c 3B69     		ldr	r3, [r7, #16]
 743 041e D31A     		subs	r3, r2, r3
 744              		.loc 1 506 13
 745 0420 022B     		cmp	r3, #2
 746 0422 01D9     		bls	.L52
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 747              		.loc 1 508 20
 748 0424 0323     		movs	r3, #3
 749 0426 5CE0     		b	.L5
 750              	.L52:
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 751              		.loc 1 504 15
 752 0428 114B     		ldr	r3, .L61
 753 042a 1B68     		ldr	r3, [r3]
 754 042c 03F00073 		and	r3, r3, #33554432
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 755              		.loc 1 504 51
 756 0430 002B     		cmp	r3, #0
 757 0432 F0D0     		beq	.L53
 758 0434 54E0     		b	.L47
 759              	.L49:
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 760              		.loc 1 515 9
 761 0436 104B     		ldr	r3, .L61+8
 762 0438 0022     		movs	r2, #0
 763 043a 1A60     		str	r2, [r3]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 764              		.loc 1 518 21
 765 043c FFF7FEFF 		bl	HAL_GetTick
 766 0440 3861     		str	r0, [r7, #16]
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 767              		.loc 1 521 14
 768 0442 08E0     		b	.L54
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 24


 769              	.L55:
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 770              		.loc 1 523 15
 771 0444 FFF7FEFF 		bl	HAL_GetTick
 772 0448 0246     		mov	r2, r0
 773              		.loc 1 523 29
 774 044a 3B69     		ldr	r3, [r7, #16]
 775 044c D31A     		subs	r3, r2, r3
 776              		.loc 1 523 13
 777 044e 022B     		cmp	r3, #2
 778 0450 01D9     		bls	.L54
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 779              		.loc 1 525 20
 780 0452 0323     		movs	r3, #3
 781 0454 45E0     		b	.L5
 782              	.L54:
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 783              		.loc 1 521 15
 784 0456 064B     		ldr	r3, .L61
 785 0458 1B68     		ldr	r3, [r3]
 786 045a 03F00073 		and	r3, r3, #33554432
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 787              		.loc 1 521 51
 788 045e 002B     		cmp	r3, #0
 789 0460 F0D1     		bne	.L55
 790 0462 3DE0     		b	.L47
 791              	.L48:
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 792              		.loc 1 533 33
 793 0464 7B68     		ldr	r3, [r7, #4]
 794 0466 9B69     		ldr	r3, [r3, #24]
 795              		.loc 1 533 9
 796 0468 012B     		cmp	r3, #1
 797 046a 07D1     		bne	.L56
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 798              		.loc 1 535 16
 799 046c 0123     		movs	r3, #1
 800 046e 38E0     		b	.L5
 801              	.L62:
 802              		.align	2
 803              	.L61:
 804 0470 00380240 		.word	1073887232
 805 0474 00700040 		.word	1073770496
 806 0478 60004742 		.word	1111949408
 807              	.L56:
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 25


 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pll_config = RCC->PLLCFGR;
 808              		.loc 1 540 25
 809 047c 1B4B     		ldr	r3, .L63
 810              		.loc 1 540 20
 811 047e 5B68     		ldr	r3, [r3, #4]
 812 0480 FB60     		str	r3, [r7, #12]
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #else
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 813              		.loc 1 550 37
 814 0482 7B68     		ldr	r3, [r7, #4]
 815 0484 9B69     		ldr	r3, [r3, #24]
 816              		.loc 1 550 12
 817 0486 012B     		cmp	r3, #1
 818 0488 28D0     		beq	.L57
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 819              		.loc 1 551 14 discriminator 1
 820 048a FB68     		ldr	r3, [r7, #12]
 821 048c 03F48002 		and	r2, r3, #4194304
 822              		.loc 1 551 80 discriminator 1
 823 0490 7B68     		ldr	r3, [r7, #4]
 824 0492 DB69     		ldr	r3, [r3, #28]
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 825              		.loc 1 550 64 discriminator 1
 826 0494 9A42     		cmp	r2, r3
 827 0496 21D1     		bne	.L57
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 828              		.loc 1 552 14
 829 0498 FB68     		ldr	r3, [r7, #12]
 830 049a 03F03F02 		and	r2, r3, #63
 831              		.loc 1 552 86
 832 049e 7B68     		ldr	r3, [r7, #4]
 833 04a0 1B6A     		ldr	r3, [r3, #32]
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 834              		.loc 1 551 92
 835 04a2 9A42     		cmp	r2, r3
 836 04a4 1AD1     		bne	.L57
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 837              		.loc 1 553 14
 838 04a6 FA68     		ldr	r2, [r7, #12]
 839 04a8 47F6C073 		movw	r3, #32704
 840 04ac 1340     		ands	r3, r3, r2
 841              		.loc 1 553 79
 842 04ae 7A68     		ldr	r2, [r7, #4]
 843 04b0 526A     		ldr	r2, [r2, #36]
 844              		.loc 1 553 86
 845 04b2 9201     		lsls	r2, r2, #6
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 26


 846              		.loc 1 552 111
 847 04b4 9342     		cmp	r3, r2
 848 04b6 11D1     		bne	.L57
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 849              		.loc 1 554 14
 850 04b8 FB68     		ldr	r3, [r7, #12]
 851 04ba 03F44032 		and	r2, r3, #196608
 852              		.loc 1 554 81
 853 04be 7B68     		ldr	r3, [r7, #4]
 854 04c0 9B6A     		ldr	r3, [r3, #40]
 855              		.loc 1 554 87
 856 04c2 5B08     		lsrs	r3, r3, #1
 857              		.loc 1 554 94
 858 04c4 013B     		subs	r3, r3, #1
 859              		.loc 1 554 101
 860 04c6 1B04     		lsls	r3, r3, #16
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 861              		.loc 1 553 111
 862 04c8 9A42     		cmp	r2, r3
 863 04ca 07D1     		bne	.L57
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_
 864              		.loc 1 555 14
 865 04cc FB68     		ldr	r3, [r7, #12]
 866 04ce 03F07062 		and	r2, r3, #251658240
 867              		.loc 1 555 79
 868 04d2 7B68     		ldr	r3, [r7, #4]
 869 04d4 DB6A     		ldr	r3, [r3, #44]
 870              		.loc 1 555 85
 871 04d6 1B06     		lsls	r3, r3, #24
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 872              		.loc 1 554 126
 873 04d8 9A42     		cmp	r2, r3
 874 04da 01D0     		beq	.L47
 875              	.L57:
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 876              		.loc 1 558 18
 877 04dc 0123     		movs	r3, #1
 878 04de 00E0     		b	.L5
 879              	.L47:
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 880              		.loc 1 563 10
 881 04e0 0023     		movs	r3, #0
 882              	.L5:
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 883              		.loc 1 564 1
 884 04e2 1846     		mov	r0, r3
 885 04e4 1837     		adds	r7, r7, #24
 886              		.cfi_def_cfa_offset 8
 887 04e6 BD46     		mov	sp, r7
 888              		.cfi_def_cfa_register 13
 889              		@ sp needed
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 27


 890 04e8 80BD     		pop	{r7, pc}
 891              	.L64:
 892 04ea 00BF     		.align	2
 893              	.L63:
 894 04ec 00380240 		.word	1073887232
 895              		.cfi_endproc
 896              	.LFE131:
 898              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 899              		.align	1
 900              		.global	HAL_RCC_ClockConfig
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 905              	HAL_RCC_ClockConfig:
 906              	.LFB132:
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 907              		.loc 1 592 1
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 16
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 84B0     		sub	sp, sp, #16
 916              		.cfi_def_cfa_offset 24
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 0006 7860     		str	r0, [r7, #4]
 920 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 28


 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 921              		.loc 1 596 5
 922 000a 7B68     		ldr	r3, [r7, #4]
 923 000c 002B     		cmp	r3, #0
 924 000e 01D1     		bne	.L66
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
 925              		.loc 1 598 12
 926 0010 0123     		movs	r3, #1
 927 0012 CCE0     		b	.L67
 928              	.L66:
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 929              		.loc 1 610 17
 930 0014 684B     		ldr	r3, .L83
 931 0016 1B68     		ldr	r3, [r3]
 932 0018 03F00703 		and	r3, r3, #7
 933              		.loc 1 610 5
 934 001c 3A68     		ldr	r2, [r7]
 935 001e 9A42     		cmp	r2, r3
 936 0020 0CD9     		bls	.L68
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 937              		.loc 1 613 5
 938 0022 654B     		ldr	r3, .L83
 939 0024 3A68     		ldr	r2, [r7]
 940 0026 D2B2     		uxtb	r2, r2
 941 0028 1A70     		strb	r2, [r3]
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 942              		.loc 1 617 8
 943 002a 634B     		ldr	r3, .L83
 944 002c 1B68     		ldr	r3, [r3]
 945 002e 03F00703 		and	r3, r3, #7
 946              		.loc 1 617 7
 947 0032 3A68     		ldr	r2, [r7]
 948 0034 9A42     		cmp	r2, r3
 949 0036 01D0     		beq	.L68
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 950              		.loc 1 619 14
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 29


 951 0038 0123     		movs	r3, #1
 952 003a B8E0     		b	.L67
 953              	.L68:
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 954              		.loc 1 624 25
 955 003c 7B68     		ldr	r3, [r7, #4]
 956 003e 1B68     		ldr	r3, [r3]
 957              		.loc 1 624 38
 958 0040 03F00203 		and	r3, r3, #2
 959              		.loc 1 624 5
 960 0044 002B     		cmp	r3, #0
 961 0046 20D0     		beq	.L69
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 962              		.loc 1 628 27
 963 0048 7B68     		ldr	r3, [r7, #4]
 964 004a 1B68     		ldr	r3, [r3]
 965              		.loc 1 628 40
 966 004c 03F00403 		and	r3, r3, #4
 967              		.loc 1 628 7
 968 0050 002B     		cmp	r3, #0
 969 0052 05D0     		beq	.L70
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 970              		.loc 1 630 7
 971 0054 594B     		ldr	r3, .L83+4
 972 0056 9B68     		ldr	r3, [r3, #8]
 973 0058 584A     		ldr	r2, .L83+4
 974 005a 43F4E053 		orr	r3, r3, #7168
 975 005e 9360     		str	r3, [r2, #8]
 976              	.L70:
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 977              		.loc 1 633 27
 978 0060 7B68     		ldr	r3, [r7, #4]
 979 0062 1B68     		ldr	r3, [r3]
 980              		.loc 1 633 40
 981 0064 03F00803 		and	r3, r3, #8
 982              		.loc 1 633 7
 983 0068 002B     		cmp	r3, #0
 984 006a 05D0     		beq	.L71
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 985              		.loc 1 635 7
 986 006c 534B     		ldr	r3, .L83+4
 987 006e 9B68     		ldr	r3, [r3, #8]
 988 0070 524A     		ldr	r2, .L83+4
 989 0072 43F46043 		orr	r3, r3, #57344
 990 0076 9360     		str	r3, [r2, #8]
 991              	.L71:
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 30


 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 992              		.loc 1 639 5
 993 0078 504B     		ldr	r3, .L83+4
 994 007a 9B68     		ldr	r3, [r3, #8]
 995 007c 23F0F002 		bic	r2, r3, #240
 996 0080 7B68     		ldr	r3, [r7, #4]
 997 0082 9B68     		ldr	r3, [r3, #8]
 998 0084 4D49     		ldr	r1, .L83+4
 999 0086 1343     		orrs	r3, r3, r2
 1000 0088 8B60     		str	r3, [r1, #8]
 1001              	.L69:
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1002              		.loc 1 643 25
 1003 008a 7B68     		ldr	r3, [r7, #4]
 1004 008c 1B68     		ldr	r3, [r3]
 1005              		.loc 1 643 38
 1006 008e 03F00103 		and	r3, r3, #1
 1007              		.loc 1 643 5
 1008 0092 002B     		cmp	r3, #0
 1009 0094 44D0     		beq	.L72
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1010              		.loc 1 648 25
 1011 0096 7B68     		ldr	r3, [r7, #4]
 1012 0098 5B68     		ldr	r3, [r3, #4]
 1013              		.loc 1 648 7
 1014 009a 012B     		cmp	r3, #1
 1015 009c 07D1     		bne	.L73
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE ready flag */
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1016              		.loc 1 651 10
 1017 009e 474B     		ldr	r3, .L83+4
 1018 00a0 1B68     		ldr	r3, [r3]
 1019 00a2 03F40033 		and	r3, r3, #131072
 1020              		.loc 1 651 9
 1021 00a6 002B     		cmp	r3, #0
 1022 00a8 19D1     		bne	.L74
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1023              		.loc 1 653 16
 1024 00aa 0123     		movs	r3, #1
 1025 00ac 7FE0     		b	.L67
 1026              	.L73:
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 31


 1027              		.loc 1 657 31
 1028 00ae 7B68     		ldr	r3, [r7, #4]
 1029 00b0 5B68     		ldr	r3, [r3, #4]
 1030              		.loc 1 657 12
 1031 00b2 022B     		cmp	r3, #2
 1032 00b4 03D0     		beq	.L75
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1033              		.loc 1 658 31 discriminator 1
 1034 00b6 7B68     		ldr	r3, [r7, #4]
 1035 00b8 5B68     		ldr	r3, [r3, #4]
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1036              		.loc 1 657 76 discriminator 1
 1037 00ba 032B     		cmp	r3, #3
 1038 00bc 07D1     		bne	.L76
 1039              	.L75:
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1040              		.loc 1 661 10
 1041 00be 3F4B     		ldr	r3, .L83+4
 1042 00c0 1B68     		ldr	r3, [r3]
 1043 00c2 03F00073 		and	r3, r3, #33554432
 1044              		.loc 1 661 9
 1045 00c6 002B     		cmp	r3, #0
 1046 00c8 09D1     		bne	.L74
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1047              		.loc 1 663 16
 1048 00ca 0123     		movs	r3, #1
 1049 00cc 6FE0     		b	.L67
 1050              	.L76:
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI ready flag */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1051              		.loc 1 670 10
 1052 00ce 3B4B     		ldr	r3, .L83+4
 1053 00d0 1B68     		ldr	r3, [r3]
 1054 00d2 03F00203 		and	r3, r3, #2
 1055              		.loc 1 670 9
 1056 00d6 002B     		cmp	r3, #0
 1057 00d8 01D1     		bne	.L74
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1058              		.loc 1 672 16
 1059 00da 0123     		movs	r3, #1
 1060 00dc 67E0     		b	.L67
 1061              	.L74:
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1062              		.loc 1 676 5
 1063 00de 374B     		ldr	r3, .L83+4
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 32


 1064 00e0 9B68     		ldr	r3, [r3, #8]
 1065 00e2 23F00302 		bic	r2, r3, #3
 1066 00e6 7B68     		ldr	r3, [r7, #4]
 1067 00e8 5B68     		ldr	r3, [r3, #4]
 1068 00ea 3449     		ldr	r1, .L83+4
 1069 00ec 1343     		orrs	r3, r3, r2
 1070 00ee 8B60     		str	r3, [r1, #8]
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1071              		.loc 1 679 17
 1072 00f0 FFF7FEFF 		bl	HAL_GetTick
 1073 00f4 F860     		str	r0, [r7, #12]
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1074              		.loc 1 681 11
 1075 00f6 0AE0     		b	.L78
 1076              	.L79:
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1077              		.loc 1 683 12
 1078 00f8 FFF7FEFF 		bl	HAL_GetTick
 1079 00fc 0246     		mov	r2, r0
 1080              		.loc 1 683 26
 1081 00fe FB68     		ldr	r3, [r7, #12]
 1082 0100 D31A     		subs	r3, r2, r3
 1083              		.loc 1 683 10
 1084 0102 41F28832 		movw	r2, #5000
 1085 0106 9342     		cmp	r3, r2
 1086 0108 01D9     		bls	.L78
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1087              		.loc 1 685 16
 1088 010a 0323     		movs	r3, #3
 1089 010c 4FE0     		b	.L67
 1090              	.L78:
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1091              		.loc 1 681 12
 1092 010e 2B4B     		ldr	r3, .L83+4
 1093 0110 9B68     		ldr	r3, [r3, #8]
 1094 0112 03F00C02 		and	r2, r3, #12
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1095              		.loc 1 681 63
 1096 0116 7B68     		ldr	r3, [r7, #4]
 1097 0118 5B68     		ldr	r3, [r3, #4]
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1098              		.loc 1 681 78
 1099 011a 9B00     		lsls	r3, r3, #2
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1100              		.loc 1 681 42
 1101 011c 9A42     		cmp	r2, r3
 1102 011e EBD1     		bne	.L79
 1103              	.L72:
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 33


 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1104              		.loc 1 691 17
 1105 0120 254B     		ldr	r3, .L83
 1106 0122 1B68     		ldr	r3, [r3]
 1107 0124 03F00703 		and	r3, r3, #7
 1108              		.loc 1 691 5
 1109 0128 3A68     		ldr	r2, [r7]
 1110 012a 9A42     		cmp	r2, r3
 1111 012c 0CD2     		bcs	.L80
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1112              		.loc 1 694 5
 1113 012e 224B     		ldr	r3, .L83
 1114 0130 3A68     		ldr	r2, [r7]
 1115 0132 D2B2     		uxtb	r2, r2
 1116 0134 1A70     		strb	r2, [r3]
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1117              		.loc 1 698 8
 1118 0136 204B     		ldr	r3, .L83
 1119 0138 1B68     		ldr	r3, [r3]
 1120 013a 03F00703 		and	r3, r3, #7
 1121              		.loc 1 698 7
 1122 013e 3A68     		ldr	r2, [r7]
 1123 0140 9A42     		cmp	r2, r3
 1124 0142 01D0     		beq	.L80
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1125              		.loc 1 700 14
 1126 0144 0123     		movs	r3, #1
 1127 0146 32E0     		b	.L67
 1128              	.L80:
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1129              		.loc 1 705 25
 1130 0148 7B68     		ldr	r3, [r7, #4]
 1131 014a 1B68     		ldr	r3, [r3]
 1132              		.loc 1 705 38
 1133 014c 03F00403 		and	r3, r3, #4
 1134              		.loc 1 705 5
 1135 0150 002B     		cmp	r3, #0
 1136 0152 08D0     		beq	.L81
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1137              		.loc 1 708 5
 1138 0154 194B     		ldr	r3, .L83+4
 1139 0156 9B68     		ldr	r3, [r3, #8]
 1140 0158 23F4E052 		bic	r2, r3, #7168
 1141 015c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 34


 1142 015e DB68     		ldr	r3, [r3, #12]
 1143 0160 1649     		ldr	r1, .L83+4
 1144 0162 1343     		orrs	r3, r3, r2
 1145 0164 8B60     		str	r3, [r1, #8]
 1146              	.L81:
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1147              		.loc 1 712 25
 1148 0166 7B68     		ldr	r3, [r7, #4]
 1149 0168 1B68     		ldr	r3, [r3]
 1150              		.loc 1 712 38
 1151 016a 03F00803 		and	r3, r3, #8
 1152              		.loc 1 712 5
 1153 016e 002B     		cmp	r3, #0
 1154 0170 09D0     		beq	.L82
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1155              		.loc 1 715 5
 1156 0172 124B     		ldr	r3, .L83+4
 1157 0174 9B68     		ldr	r3, [r3, #8]
 1158 0176 23F46042 		bic	r2, r3, #57344
 1159 017a 7B68     		ldr	r3, [r7, #4]
 1160 017c 1B69     		ldr	r3, [r3, #16]
 1161 017e DB00     		lsls	r3, r3, #3
 1162 0180 0E49     		ldr	r1, .L83+4
 1163 0182 1343     		orrs	r3, r3, r2
 1164 0184 8B60     		str	r3, [r1, #8]
 1165              	.L82:
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1166              		.loc 1 719 21
 1167 0186 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1168 018a 0246     		mov	r2, r0
 1169              		.loc 1 719 68
 1170 018c 0B4B     		ldr	r3, .L83+4
 1171 018e 9B68     		ldr	r3, [r3, #8]
 1172              		.loc 1 719 91
 1173 0190 1B09     		lsrs	r3, r3, #4
 1174 0192 03F00F03 		and	r3, r3, #15
 1175              		.loc 1 719 63
 1176 0196 0A49     		ldr	r1, .L83+8
 1177 0198 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1178              		.loc 1 719 47
 1179 019a 22FA03F3 		lsr	r3, r2, r3
 1180              		.loc 1 719 19
 1181 019e 094A     		ldr	r2, .L83+12
 1182 01a0 1360     		str	r3, [r2]
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 1183              		.loc 1 722 3
 1184 01a2 094B     		ldr	r3, .L83+16
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 35


 1185 01a4 1B68     		ldr	r3, [r3]
 1186 01a6 1846     		mov	r0, r3
 1187 01a8 FFF7FEFF 		bl	HAL_InitTick
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1188              		.loc 1 724 10
 1189 01ac 0023     		movs	r3, #0
 1190              	.L67:
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1191              		.loc 1 725 1
 1192 01ae 1846     		mov	r0, r3
 1193 01b0 1037     		adds	r7, r7, #16
 1194              		.cfi_def_cfa_offset 8
 1195 01b2 BD46     		mov	sp, r7
 1196              		.cfi_def_cfa_register 13
 1197              		@ sp needed
 1198 01b4 80BD     		pop	{r7, pc}
 1199              	.L84:
 1200 01b6 00BF     		.align	2
 1201              	.L83:
 1202 01b8 003C0240 		.word	1073888256
 1203 01bc 00380240 		.word	1073887232
 1204 01c0 00000000 		.word	AHBPrescTable
 1205 01c4 00000000 		.word	SystemCoreClock
 1206 01c8 00000000 		.word	uwTickPrio
 1207              		.cfi_endproc
 1208              	.LFE132:
 1210              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1211              		.align	1
 1212              		.global	HAL_RCC_MCOConfig
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1217              	HAL_RCC_MCOConfig:
 1218              	.LFB133:
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 36


 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1219              		.loc 1 776 1
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 48
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 80B5     		push	{r7, lr}
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 8CB0     		sub	sp, sp, #48
 1228              		.cfi_def_cfa_offset 56
 1229 0004 00AF     		add	r7, sp, #0
 1230              		.cfi_def_cfa_register 7
 1231 0006 F860     		str	r0, [r7, #12]
 1232 0008 B960     		str	r1, [r7, #8]
 1233 000a 7A60     		str	r2, [r7, #4]
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1234              		.loc 1 782 5
 1235 000c FB68     		ldr	r3, [r7, #12]
 1236 000e 002B     		cmp	r3, #0
 1237 0010 29D1     		bne	.L86
 1238              	.LBB4:
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 37


 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1239              		.loc 1 787 5
 1240 0012 0023     		movs	r3, #0
 1241 0014 BB61     		str	r3, [r7, #24]
 1242 0016 2B4B     		ldr	r3, .L89
 1243 0018 1B6B     		ldr	r3, [r3, #48]
 1244 001a 2A4A     		ldr	r2, .L89
 1245 001c 43F00103 		orr	r3, r3, #1
 1246 0020 1363     		str	r3, [r2, #48]
 1247 0022 284B     		ldr	r3, .L89
 1248 0024 1B6B     		ldr	r3, [r3, #48]
 1249 0026 03F00103 		and	r3, r3, #1
 1250 002a BB61     		str	r3, [r7, #24]
 1251 002c BB69     		ldr	r3, [r7, #24]
 1252              	.LBE4:
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1253              		.loc 1 790 25
 1254 002e 4FF48073 		mov	r3, #256
 1255 0032 FB61     		str	r3, [r7, #28]
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1256              		.loc 1 791 26
 1257 0034 0223     		movs	r3, #2
 1258 0036 3B62     		str	r3, [r7, #32]
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1259              		.loc 1 792 27
 1260 0038 0323     		movs	r3, #3
 1261 003a BB62     		str	r3, [r7, #40]
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1262              		.loc 1 793 26
 1263 003c 0023     		movs	r3, #0
 1264 003e 7B62     		str	r3, [r7, #36]
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1265              		.loc 1 794 31
 1266 0040 0023     		movs	r3, #0
 1267 0042 FB62     		str	r3, [r7, #44]
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1268              		.loc 1 795 5
 1269 0044 07F11C03 		add	r3, r7, #28
 1270 0048 1946     		mov	r1, r3
 1271 004a 1F48     		ldr	r0, .L89+4
 1272 004c FFF7FEFF 		bl	HAL_GPIO_Init
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1273              		.loc 1 798 5
 1274 0050 1C4B     		ldr	r3, .L89
 1275 0052 9B68     		ldr	r3, [r3, #8]
 1276 0054 23F0EC62 		bic	r2, r3, #123731968
 1277 0058 B968     		ldr	r1, [r7, #8]
 1278 005a 7B68     		ldr	r3, [r7, #4]
 1279 005c 0B43     		orrs	r3, r3, r1
 1280 005e 1949     		ldr	r1, .L89
 1281 0060 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 38


 1282 0062 8B60     		str	r3, [r1, #8]
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2)
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2 */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1283              		.loc 1 830 1
 1284 0064 29E0     		b	.L88
 1285              	.L86:
 1286              	.LBB5:
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1287              		.loc 1 811 5
 1288 0066 0023     		movs	r3, #0
 1289 0068 7B61     		str	r3, [r7, #20]
 1290 006a 164B     		ldr	r3, .L89
 1291 006c 1B6B     		ldr	r3, [r3, #48]
 1292 006e 154A     		ldr	r2, .L89
 1293 0070 43F00403 		orr	r3, r3, #4
 1294 0074 1363     		str	r3, [r2, #48]
 1295 0076 134B     		ldr	r3, .L89
 1296 0078 1B6B     		ldr	r3, [r3, #48]
 1297 007a 03F00403 		and	r3, r3, #4
 1298 007e 7B61     		str	r3, [r7, #20]
 1299 0080 7B69     		ldr	r3, [r7, #20]
 1300              	.LBE5:
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1301              		.loc 1 814 25
 1302 0082 4FF40073 		mov	r3, #512
 1303 0086 FB61     		str	r3, [r7, #28]
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 39


 1304              		.loc 1 815 26
 1305 0088 0223     		movs	r3, #2
 1306 008a 3B62     		str	r3, [r7, #32]
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1307              		.loc 1 816 27
 1308 008c 0323     		movs	r3, #3
 1309 008e BB62     		str	r3, [r7, #40]
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1310              		.loc 1 817 26
 1311 0090 0023     		movs	r3, #0
 1312 0092 7B62     		str	r3, [r7, #36]
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1313              		.loc 1 818 31
 1314 0094 0023     		movs	r3, #0
 1315 0096 FB62     		str	r3, [r7, #44]
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1316              		.loc 1 819 5
 1317 0098 07F11C03 		add	r3, r7, #28
 1318 009c 1946     		mov	r1, r3
 1319 009e 0B48     		ldr	r0, .L89+8
 1320 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1321              		.loc 1 822 5
 1322 00a4 074B     		ldr	r3, .L89
 1323 00a6 9B68     		ldr	r3, [r3, #8]
 1324 00a8 23F07842 		bic	r2, r3, #-134217728
 1325 00ac 7B68     		ldr	r3, [r7, #4]
 1326 00ae D900     		lsls	r1, r3, #3
 1327 00b0 BB68     		ldr	r3, [r7, #8]
 1328 00b2 0B43     		orrs	r3, r3, r1
 1329 00b4 0349     		ldr	r1, .L89
 1330 00b6 1343     		orrs	r3, r3, r2
 1331 00b8 8B60     		str	r3, [r1, #8]
 1332              	.L88:
 1333              		.loc 1 830 1
 1334 00ba 00BF     		nop
 1335 00bc 3037     		adds	r7, r7, #48
 1336              		.cfi_def_cfa_offset 8
 1337 00be BD46     		mov	sp, r7
 1338              		.cfi_def_cfa_register 13
 1339              		@ sp needed
 1340 00c0 80BD     		pop	{r7, pc}
 1341              	.L90:
 1342 00c2 00BF     		.align	2
 1343              	.L89:
 1344 00c4 00380240 		.word	1073887232
 1345 00c8 00000240 		.word	1073872896
 1346 00cc 00080240 		.word	1073874944
 1347              		.cfi_endproc
 1348              	.LFE133:
 1350              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1351              		.align	1
 1352              		.global	HAL_RCC_EnableCSS
 1353              		.syntax unified
 1354              		.thumb
 1355              		.thumb_func
 1357              	HAL_RCC_EnableCSS:
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 40


 1358              	.LFB134:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1359              		.loc 1 842 1
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 0
 1362              		@ frame_needed = 1, uses_anonymous_args = 0
 1363              		@ link register save eliminated.
 1364 0000 80B4     		push	{r7}
 1365              		.cfi_def_cfa_offset 4
 1366              		.cfi_offset 7, -4
 1367 0002 00AF     		add	r7, sp, #0
 1368              		.cfi_def_cfa_register 7
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1369              		.loc 1 843 3
 1370 0004 034B     		ldr	r3, .L92
 1371              		.loc 1 843 38
 1372 0006 0122     		movs	r2, #1
 1373 0008 1A60     		str	r2, [r3]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1374              		.loc 1 844 1
 1375 000a 00BF     		nop
 1376 000c BD46     		mov	sp, r7
 1377              		.cfi_def_cfa_register 13
 1378              		@ sp needed
 1379 000e 5DF8047B 		ldr	r7, [sp], #4
 1380              		.cfi_restore 7
 1381              		.cfi_def_cfa_offset 0
 1382 0012 7047     		bx	lr
 1383              	.L93:
 1384              		.align	2
 1385              	.L92:
 1386 0014 4C004742 		.word	1111949388
 1387              		.cfi_endproc
 1388              	.LFE134:
 1390              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1391              		.align	1
 1392              		.global	HAL_RCC_DisableCSS
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1397              	HAL_RCC_DisableCSS:
 1398              	.LFB135:
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 41


 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1399              		.loc 1 851 1
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 0
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403              		@ link register save eliminated.
 1404 0000 80B4     		push	{r7}
 1405              		.cfi_def_cfa_offset 4
 1406              		.cfi_offset 7, -4
 1407 0002 00AF     		add	r7, sp, #0
 1408              		.cfi_def_cfa_register 7
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1409              		.loc 1 852 3
 1410 0004 034B     		ldr	r3, .L95
 1411              		.loc 1 852 38
 1412 0006 0022     		movs	r2, #0
 1413 0008 1A60     		str	r2, [r3]
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1414              		.loc 1 853 1
 1415 000a 00BF     		nop
 1416 000c BD46     		mov	sp, r7
 1417              		.cfi_def_cfa_register 13
 1418              		@ sp needed
 1419 000e 5DF8047B 		ldr	r7, [sp], #4
 1420              		.cfi_restore 7
 1421              		.cfi_def_cfa_offset 0
 1422 0012 7047     		bx	lr
 1423              	.L96:
 1424              		.align	2
 1425              	.L95:
 1426 0014 4C004742 		.word	1111949388
 1427              		.cfi_endproc
 1428              	.LFE135:
 1430              		.global	__aeabi_uldivmod
 1431              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1432              		.align	1
 1433              		.weak	HAL_RCC_GetSysClockFreq
 1434              		.syntax unified
 1435              		.thumb
 1436              		.thumb_func
 1438              	HAL_RCC_GetSysClockFreq:
 1439              	.LFB136:
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 42


 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1440              		.loc 1 886 1
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 64
 1443              		@ frame_needed = 1, uses_anonymous_args = 0
 1444 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 1445              		.cfi_def_cfa_offset 32
 1446              		.cfi_offset 4, -32
 1447              		.cfi_offset 5, -28
 1448              		.cfi_offset 7, -24
 1449              		.cfi_offset 8, -20
 1450              		.cfi_offset 9, -16
 1451              		.cfi_offset 10, -12
 1452              		.cfi_offset 11, -8
 1453              		.cfi_offset 14, -4
 1454 0004 90B0     		sub	sp, sp, #64
 1455              		.cfi_def_cfa_offset 96
 1456 0006 00AF     		add	r7, sp, #0
 1457              		.cfi_def_cfa_register 7
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1458              		.loc 1 887 12
 1459 0008 0023     		movs	r3, #0
 1460 000a 7B63     		str	r3, [r7, #52]
 1461              		.loc 1 887 23
 1462 000c 0023     		movs	r3, #0
 1463 000e FB63     		str	r3, [r7, #60]
 1464              		.loc 1 887 36
 1465 0010 0023     		movs	r3, #0
 1466 0012 3B63     		str	r3, [r7, #48]
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1467              		.loc 1 888 12
 1468 0014 0023     		movs	r3, #0
 1469 0016 BB63     		str	r3, [r7, #56]
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1470              		.loc 1 891 14
 1471 0018 594B     		ldr	r3, .L106
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 43


 1472 001a 9B68     		ldr	r3, [r3, #8]
 1473              		.loc 1 891 21
 1474 001c 03F00C03 		and	r3, r3, #12
 1475              		.loc 1 891 3
 1476 0020 082B     		cmp	r3, #8
 1477 0022 0DD0     		beq	.L98
 1478 0024 082B     		cmp	r3, #8
 1479 0026 00F2A180 		bhi	.L99
 1480 002a 002B     		cmp	r3, #0
 1481 002c 02D0     		beq	.L100
 1482 002e 042B     		cmp	r3, #4
 1483 0030 03D0     		beq	.L101
 1484 0032 9BE0     		b	.L99
 1485              	.L100:
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1486              		.loc 1 895 20
 1487 0034 534B     		ldr	r3, .L106+4
 1488 0036 BB63     		str	r3, [r7, #56]
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        break;
 1489              		.loc 1 896 8
 1490 0038 9BE0     		b	.L102
 1491              	.L101:
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1492              		.loc 1 900 20
 1493 003a 534B     		ldr	r3, .L106+8
 1494 003c BB63     		str	r3, [r7, #56]
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1495              		.loc 1 901 7
 1496 003e 98E0     		b	.L102
 1497              	.L98:
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1498              		.loc 1 907 17
 1499 0040 4F4B     		ldr	r3, .L106
 1500 0042 5B68     		ldr	r3, [r3, #4]
 1501              		.loc 1 907 12
 1502 0044 03F03F03 		and	r3, r3, #63
 1503 0048 7B63     		str	r3, [r7, #52]
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1504              		.loc 1 908 10
 1505 004a 4D4B     		ldr	r3, .L106
 1506 004c 5B68     		ldr	r3, [r3, #4]
 1507 004e 03F48003 		and	r3, r3, #4194304
 1508              		.loc 1 908 9
 1509 0052 002B     		cmp	r3, #0
 1510 0054 28D0     		beq	.L103
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 44


 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1511              		.loc 1 911 72
 1512 0056 4A4B     		ldr	r3, .L106
 1513 0058 5B68     		ldr	r3, [r3, #4]
 1514              		.loc 1 911 102
 1515 005a 9B09     		lsrs	r3, r3, #6
 1516              		.loc 1 911 56
 1517 005c 0022     		movs	r2, #0
 1518 005e 3B62     		str	r3, [r7, #32]
 1519 0060 7A62     		str	r2, [r7, #36]
 1520 0062 3B6A     		ldr	r3, [r7, #32]
 1521 0064 C3F30800 		ubfx	r0, r3, #0, #9
 1522 0068 0021     		movs	r1, #0
 1523              		.loc 1 911 53
 1524 006a 474B     		ldr	r3, .L106+8
 1525 006c 03FB01F2 		mul	r2, r3, r1
 1526 0070 0023     		movs	r3, #0
 1527 0072 00FB03F3 		mul	r3, r0, r3
 1528 0076 1344     		add	r3, r3, r2
 1529 0078 434A     		ldr	r2, .L106+8
 1530 007a A0FB0212 		umull	r1, r2, r0, r2
 1531 007e FA62     		str	r2, [r7, #44]
 1532 0080 0A46     		mov	r2, r1
 1533 0082 BA62     		str	r2, [r7, #40]
 1534 0084 FA6A     		ldr	r2, [r7, #44]
 1535 0086 1344     		add	r3, r3, r2
 1536 0088 FB62     		str	r3, [r7, #44]
 1537              		.loc 1 911 132
 1538 008a 7B6B     		ldr	r3, [r7, #52]
 1539 008c 0022     		movs	r2, #0
 1540 008e BB61     		str	r3, [r7, #24]
 1541 0090 FA61     		str	r2, [r7, #28]
 1542              		.loc 1 911 130
 1543 0092 D7E90623 		ldrd	r2, [r7, #24]
 1544 0096 D7E90A01 		ldrd	r0, [r7, #40]
 1545 009a FFF7FEFF 		bl	__aeabi_uldivmod
 1546 009e 0246     		mov	r2, r0
 1547 00a0 0B46     		mov	r3, r1
 1548              		.loc 1 911 16
 1549 00a2 1346     		mov	r3, r2
 1550 00a4 FB63     		str	r3, [r7, #60]
 1551 00a6 53E0     		b	.L104
 1552              	.L103:
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1553              		.loc 1 916 72
 1554 00a8 354B     		ldr	r3, .L106
 1555 00aa 5B68     		ldr	r3, [r3, #4]
 1556              		.loc 1 916 102
 1557 00ac 9B09     		lsrs	r3, r3, #6
 1558              		.loc 1 916 56
 1559 00ae 0022     		movs	r2, #0
 1560 00b0 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 45


 1561 00b2 7A61     		str	r2, [r7, #20]
 1562 00b4 3B69     		ldr	r3, [r7, #16]
 1563 00b6 C3F3080A 		ubfx	r10, r3, #0, #9
 1564 00ba 4FF0000B 		mov	fp, #0
 1565              		.loc 1 916 53
 1566 00be 5246     		mov	r2, r10
 1567 00c0 5B46     		mov	r3, fp
 1568 00c2 4FF00000 		mov	r0, #0
 1569 00c6 4FF00001 		mov	r1, #0
 1570 00ca 5901     		lsls	r1, r3, #5
 1571 00cc 41EAD261 		orr	r1, r1, r2, lsr #27
 1572 00d0 5001     		lsls	r0, r2, #5
 1573 00d2 0246     		mov	r2, r0
 1574 00d4 0B46     		mov	r3, r1
 1575 00d6 B2EB0A08 		subs	r8, r2, r10
 1576 00da 63EB0B09 		sbc	r9, r3, fp
 1577 00de 4FF00002 		mov	r2, #0
 1578 00e2 4FF00003 		mov	r3, #0
 1579 00e6 4FEA8913 		lsl	r3, r9, #6
 1580 00ea 43EA9863 		orr	r3, r3, r8, lsr #26
 1581 00ee 4FEA8812 		lsl	r2, r8, #6
 1582 00f2 B2EB0804 		subs	r4, r2, r8
 1583 00f6 63EB0905 		sbc	r5, r3, r9
 1584 00fa 4FF00002 		mov	r2, #0
 1585 00fe 4FF00003 		mov	r3, #0
 1586 0102 EB00     		lsls	r3, r5, #3
 1587 0104 43EA5473 		orr	r3, r3, r4, lsr #29
 1588 0108 E200     		lsls	r2, r4, #3
 1589 010a 1446     		mov	r4, r2
 1590 010c 1D46     		mov	r5, r3
 1591 010e 14EB0A03 		adds	r3, r4, r10
 1592 0112 3B60     		str	r3, [r7]
 1593 0114 45EB0B03 		adc	r3, r5, fp
 1594 0118 7B60     		str	r3, [r7, #4]
 1595 011a 4FF00002 		mov	r2, #0
 1596 011e 4FF00003 		mov	r3, #0
 1597 0122 D7E90045 		ldrd	r4, [r7]
 1598 0126 2946     		mov	r1, r5
 1599 0128 8B02     		lsls	r3, r1, #10
 1600 012a 2146     		mov	r1, r4
 1601 012c 43EA9153 		orr	r3, r3, r1, lsr #22
 1602 0130 2146     		mov	r1, r4
 1603 0132 8A02     		lsls	r2, r1, #10
 1604 0134 1046     		mov	r0, r2
 1605 0136 1946     		mov	r1, r3
 1606              		.loc 1 916 132
 1607 0138 7B6B     		ldr	r3, [r7, #52]
 1608 013a 0022     		movs	r2, #0
 1609 013c BB60     		str	r3, [r7, #8]
 1610 013e FA60     		str	r2, [r7, #12]
 1611              		.loc 1 916 130
 1612 0140 D7E90223 		ldrd	r2, [r7, #8]
 1613 0144 FFF7FEFF 		bl	__aeabi_uldivmod
 1614 0148 0246     		mov	r2, r0
 1615 014a 0B46     		mov	r3, r1
 1616              		.loc 1 916 16
 1617 014c 1346     		mov	r3, r2
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 46


 1618 014e FB63     		str	r3, [r7, #60]
 1619              	.L104:
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 1620              		.loc 1 918 21
 1621 0150 0B4B     		ldr	r3, .L106
 1622 0152 5B68     		ldr	r3, [r3, #4]
 1623              		.loc 1 918 51
 1624 0154 1B0C     		lsrs	r3, r3, #16
 1625 0156 03F00303 		and	r3, r3, #3
 1626              		.loc 1 918 76
 1627 015a 0133     		adds	r3, r3, #1
 1628              		.loc 1 918 12
 1629 015c 5B00     		lsls	r3, r3, #1
 1630 015e 3B63     		str	r3, [r7, #48]
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 1631              		.loc 1 920 20
 1632 0160 FA6B     		ldr	r2, [r7, #60]
 1633 0162 3B6B     		ldr	r3, [r7, #48]
 1634 0164 B2FBF3F3 		udiv	r3, r2, r3
 1635 0168 BB63     		str	r3, [r7, #56]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1636              		.loc 1 921 7
 1637 016a 02E0     		b	.L102
 1638              	.L99:
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1639              		.loc 1 925 20
 1640 016c 054B     		ldr	r3, .L106+4
 1641 016e BB63     		str	r3, [r7, #56]
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1642              		.loc 1 926 7
 1643 0170 00BF     		nop
 1644              	.L102:
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 1645              		.loc 1 929 10
 1646 0172 BB6B     		ldr	r3, [r7, #56]
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1647              		.loc 1 930 1
 1648 0174 1846     		mov	r0, r3
 1649 0176 4037     		adds	r7, r7, #64
 1650              		.cfi_def_cfa_offset 32
 1651 0178 BD46     		mov	sp, r7
 1652              		.cfi_def_cfa_register 13
 1653              		@ sp needed
 1654 017a BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 1655              	.L107:
 1656 017e 00BF     		.align	2
 1657              	.L106:
 1658 0180 00380240 		.word	1073887232
 1659 0184 0024F400 		.word	16000000
 1660 0188 00366E01 		.word	24000000
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 47


 1661              		.cfi_endproc
 1662              	.LFE136:
 1664              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1665              		.align	1
 1666              		.global	HAL_RCC_GetHCLKFreq
 1667              		.syntax unified
 1668              		.thumb
 1669              		.thumb_func
 1671              	HAL_RCC_GetHCLKFreq:
 1672              	.LFB137:
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1673              		.loc 1 942 1
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 1, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
 1678 0000 80B4     		push	{r7}
 1679              		.cfi_def_cfa_offset 4
 1680              		.cfi_offset 7, -4
 1681 0002 00AF     		add	r7, sp, #0
 1682              		.cfi_def_cfa_register 7
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 1683              		.loc 1 943 10
 1684 0004 034B     		ldr	r3, .L110
 1685 0006 1B68     		ldr	r3, [r3]
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1686              		.loc 1 944 1
 1687 0008 1846     		mov	r0, r3
 1688 000a BD46     		mov	sp, r7
 1689              		.cfi_def_cfa_register 13
 1690              		@ sp needed
 1691 000c 5DF8047B 		ldr	r7, [sp], #4
 1692              		.cfi_restore 7
 1693              		.cfi_def_cfa_offset 0
 1694 0010 7047     		bx	lr
 1695              	.L111:
 1696 0012 00BF     		.align	2
 1697              	.L110:
 1698 0014 00000000 		.word	SystemCoreClock
 1699              		.cfi_endproc
 1700              	.LFE137:
 1702              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1703              		.align	1
 1704              		.global	HAL_RCC_GetPCLK1Freq
 1705              		.syntax unified
 1706              		.thumb
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 48


 1707              		.thumb_func
 1709              	HAL_RCC_GetPCLK1Freq:
 1710              	.LFB138:
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1711              		.loc 1 953 1
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 0
 1714              		@ frame_needed = 1, uses_anonymous_args = 0
 1715 0000 80B5     		push	{r7, lr}
 1716              		.cfi_def_cfa_offset 8
 1717              		.cfi_offset 7, -8
 1718              		.cfi_offset 14, -4
 1719 0002 00AF     		add	r7, sp, #0
 1720              		.cfi_def_cfa_register 7
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]
 1721              		.loc 1 955 11
 1722 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1723 0008 0246     		mov	r2, r0
 1724              		.loc 1 955 54
 1725 000a 054B     		ldr	r3, .L114
 1726 000c 9B68     		ldr	r3, [r3, #8]
 1727              		.loc 1 955 78
 1728 000e 9B0A     		lsrs	r3, r3, #10
 1729 0010 03F00703 		and	r3, r3, #7
 1730              		.loc 1 955 49
 1731 0014 0349     		ldr	r1, .L114+4
 1732 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1733              		.loc 1 955 33
 1734 0018 22FA03F3 		lsr	r3, r2, r3
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1735              		.loc 1 956 1
 1736 001c 1846     		mov	r0, r3
 1737 001e 80BD     		pop	{r7, pc}
 1738              	.L115:
 1739              		.align	2
 1740              	.L114:
 1741 0020 00380240 		.word	1073887232
 1742 0024 00000000 		.word	APBPrescTable
 1743              		.cfi_endproc
 1744              	.LFE138:
 1746              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1747              		.align	1
 1748              		.global	HAL_RCC_GetPCLK2Freq
 1749              		.syntax unified
 1750              		.thumb
 1751              		.thumb_func
 1753              	HAL_RCC_GetPCLK2Freq:
 1754              	.LFB139:
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 49


 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1755              		.loc 1 965 1
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 1, uses_anonymous_args = 0
 1759 0000 80B5     		push	{r7, lr}
 1760              		.cfi_def_cfa_offset 8
 1761              		.cfi_offset 7, -8
 1762              		.cfi_offset 14, -4
 1763 0002 00AF     		add	r7, sp, #0
 1764              		.cfi_def_cfa_register 7
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos])
 1765              		.loc 1 967 11
 1766 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1767 0008 0246     		mov	r2, r0
 1768              		.loc 1 967 53
 1769 000a 054B     		ldr	r3, .L118
 1770 000c 9B68     		ldr	r3, [r3, #8]
 1771              		.loc 1 967 77
 1772 000e 5B0B     		lsrs	r3, r3, #13
 1773 0010 03F00703 		and	r3, r3, #7
 1774              		.loc 1 967 48
 1775 0014 0349     		ldr	r1, .L118+4
 1776 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1777              		.loc 1 967 32
 1778 0018 22FA03F3 		lsr	r3, r2, r3
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1779              		.loc 1 968 1
 1780 001c 1846     		mov	r0, r3
 1781 001e 80BD     		pop	{r7, pc}
 1782              	.L119:
 1783              		.align	2
 1784              	.L118:
 1785 0020 00380240 		.word	1073887232
 1786 0024 00000000 		.word	APBPrescTable
 1787              		.cfi_endproc
 1788              	.LFE139:
 1790              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1791              		.align	1
 1792              		.weak	HAL_RCC_GetOscConfig
 1793              		.syntax unified
 1794              		.thumb
 1795              		.thumb_func
 1797              	HAL_RCC_GetOscConfig:
 1798              	.LFB140:
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 50


 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1799              		.loc 1 978 1
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 8
 1802              		@ frame_needed = 1, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
 1804 0000 80B4     		push	{r7}
 1805              		.cfi_def_cfa_offset 4
 1806              		.cfi_offset 7, -4
 1807 0002 83B0     		sub	sp, sp, #12
 1808              		.cfi_def_cfa_offset 16
 1809 0004 00AF     		add	r7, sp, #0
 1810              		.cfi_def_cfa_register 7
 1811 0006 7860     		str	r0, [r7, #4]
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 1812              		.loc 1 980 37
 1813 0008 7B68     		ldr	r3, [r7, #4]
 1814 000a 0F22     		movs	r2, #15
 1815 000c 1A60     		str	r2, [r3]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1816              		.loc 1 983 10
 1817 000e 454B     		ldr	r3, .L133
 1818 0010 1B68     		ldr	r3, [r3]
 1819              		.loc 1 983 15
 1820 0012 03F48023 		and	r3, r3, #262144
 1821              		.loc 1 983 5
 1822 0016 B3F5802F 		cmp	r3, #262144
 1823 001a 04D1     		bne	.L121
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1824              		.loc 1 985 33
 1825 001c 7B68     		ldr	r3, [r7, #4]
 1826 001e 4FF4A022 		mov	r2, #327680
 1827 0022 5A60     		str	r2, [r3, #4]
 1828 0024 0EE0     		b	.L122
 1829              	.L121:
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 1830              		.loc 1 987 15
 1831 0026 3F4B     		ldr	r3, .L133
 1832 0028 1B68     		ldr	r3, [r3]
 1833              		.loc 1 987 20
 1834 002a 03F48033 		and	r3, r3, #65536
 1835              		.loc 1 987 10
 1836 002e B3F5803F 		cmp	r3, #65536
 1837 0032 04D1     		bne	.L123
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 51


 1838              		.loc 1 989 33
 1839 0034 7B68     		ldr	r3, [r7, #4]
 1840 0036 4FF48032 		mov	r2, #65536
 1841 003a 5A60     		str	r2, [r3, #4]
 1842 003c 02E0     		b	.L122
 1843              	.L123:
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1844              		.loc 1 993 33
 1845 003e 7B68     		ldr	r3, [r7, #4]
 1846 0040 0022     		movs	r2, #0
 1847 0042 5A60     		str	r2, [r3, #4]
 1848              	.L122:
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1849              		.loc 1 997 10
 1850 0044 374B     		ldr	r3, .L133
 1851 0046 1B68     		ldr	r3, [r3]
 1852              		.loc 1 997 15
 1853 0048 03F00103 		and	r3, r3, #1
 1854              		.loc 1 997 5
 1855 004c 012B     		cmp	r3, #1
 1856 004e 03D1     		bne	.L124
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1857              		.loc 1 999 33
 1858 0050 7B68     		ldr	r3, [r7, #4]
 1859 0052 0122     		movs	r2, #1
 1860 0054 DA60     		str	r2, [r3, #12]
 1861 0056 02E0     		b	.L125
 1862              	.L124:
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1863              		.loc 1 1003 33
 1864 0058 7B68     		ldr	r3, [r7, #4]
 1865 005a 0022     		movs	r2, #0
 1866 005c DA60     		str	r2, [r3, #12]
 1867              	.L125:
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_P
 1868              		.loc 1 1006 59
 1869 005e 314B     		ldr	r3, .L133
 1870 0060 1B68     		ldr	r3, [r3]
 1871              		.loc 1 1006 44
 1872 0062 DB08     		lsrs	r3, r3, #3
 1873 0064 03F01F02 		and	r2, r3, #31
 1874              		.loc 1 1006 42
 1875 0068 7B68     		ldr	r3, [r7, #4]
 1876 006a 1A61     		str	r2, [r3, #16]
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 52


1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1877              		.loc 1 1009 10
 1878 006c 2D4B     		ldr	r3, .L133
 1879 006e 1B6F     		ldr	r3, [r3, #112]
 1880              		.loc 1 1009 17
 1881 0070 03F00403 		and	r3, r3, #4
 1882              		.loc 1 1009 5
 1883 0074 042B     		cmp	r3, #4
 1884 0076 03D1     		bne	.L126
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1885              		.loc 1 1011 33
 1886 0078 7B68     		ldr	r3, [r7, #4]
 1887 007a 0522     		movs	r2, #5
 1888 007c 9A60     		str	r2, [r3, #8]
 1889 007e 0CE0     		b	.L127
 1890              	.L126:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1891              		.loc 1 1013 15
 1892 0080 284B     		ldr	r3, .L133
 1893 0082 1B6F     		ldr	r3, [r3, #112]
 1894              		.loc 1 1013 22
 1895 0084 03F00103 		and	r3, r3, #1
 1896              		.loc 1 1013 10
 1897 0088 012B     		cmp	r3, #1
 1898 008a 03D1     		bne	.L128
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1899              		.loc 1 1015 33
 1900 008c 7B68     		ldr	r3, [r7, #4]
 1901 008e 0122     		movs	r2, #1
 1902 0090 9A60     		str	r2, [r3, #8]
 1903 0092 02E0     		b	.L127
 1904              	.L128:
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1905              		.loc 1 1019 33
 1906 0094 7B68     		ldr	r3, [r7, #4]
 1907 0096 0022     		movs	r2, #0
 1908 0098 9A60     		str	r2, [r3, #8]
 1909              	.L127:
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1910              		.loc 1 1023 10
 1911 009a 224B     		ldr	r3, .L133
 1912 009c 5B6F     		ldr	r3, [r3, #116]
 1913              		.loc 1 1023 16
 1914 009e 03F00103 		and	r3, r3, #1
 1915              		.loc 1 1023 5
 1916 00a2 012B     		cmp	r3, #1
 1917 00a4 03D1     		bne	.L129
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 53


1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1918              		.loc 1 1025 33
 1919 00a6 7B68     		ldr	r3, [r7, #4]
 1920 00a8 0122     		movs	r2, #1
 1921 00aa 5A61     		str	r2, [r3, #20]
 1922 00ac 02E0     		b	.L130
 1923              	.L129:
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1924              		.loc 1 1029 33
 1925 00ae 7B68     		ldr	r3, [r7, #4]
 1926 00b0 0022     		movs	r2, #0
 1927 00b2 5A61     		str	r2, [r3, #20]
 1928              	.L130:
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1929              		.loc 1 1033 10
 1930 00b4 1B4B     		ldr	r3, .L133
 1931 00b6 1B68     		ldr	r3, [r3]
 1932              		.loc 1 1033 15
 1933 00b8 03F08073 		and	r3, r3, #16777216
 1934              		.loc 1 1033 5
 1935 00bc B3F1807F 		cmp	r3, #16777216
 1936 00c0 03D1     		bne	.L131
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1937              		.loc 1 1035 37
 1938 00c2 7B68     		ldr	r3, [r7, #4]
 1939 00c4 0222     		movs	r2, #2
 1940 00c6 9A61     		str	r2, [r3, #24]
 1941 00c8 02E0     		b	.L132
 1942              	.L131:
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1943              		.loc 1 1039 37
 1944 00ca 7B68     		ldr	r3, [r7, #4]
 1945 00cc 0122     		movs	r2, #1
 1946 00ce 9A61     		str	r2, [r3, #24]
 1947              	.L132:
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 1948              		.loc 1 1041 52
 1949 00d0 144B     		ldr	r3, .L133
 1950 00d2 5B68     		ldr	r3, [r3, #4]
 1951              		.loc 1 1041 38
 1952 00d4 03F48002 		and	r2, r3, #4194304
 1953              		.loc 1 1041 36
 1954 00d8 7B68     		ldr	r3, [r7, #4]
 1955 00da DA61     		str	r2, [r3, #28]
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 54


 1956              		.loc 1 1042 47
 1957 00dc 114B     		ldr	r3, .L133
 1958 00de 5B68     		ldr	r3, [r3, #4]
 1959              		.loc 1 1042 33
 1960 00e0 03F03F02 		and	r2, r3, #63
 1961              		.loc 1 1042 31
 1962 00e4 7B68     		ldr	r3, [r7, #4]
 1963 00e6 1A62     		str	r2, [r3, #32]
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 1964              		.loc 1 1043 48
 1965 00e8 0E4B     		ldr	r3, .L133
 1966 00ea 5B68     		ldr	r3, [r3, #4]
 1967              		.loc 1 1043 33
 1968 00ec 9B09     		lsrs	r3, r3, #6
 1969 00ee C3F30802 		ubfx	r2, r3, #0, #9
 1970              		.loc 1 1043 31
 1971 00f2 7B68     		ldr	r3, [r7, #4]
 1972 00f4 5A62     		str	r2, [r3, #36]
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 1973              		.loc 1 1044 50
 1974 00f6 0B4B     		ldr	r3, .L133
 1975 00f8 5B68     		ldr	r3, [r3, #4]
 1976              		.loc 1 1044 60
 1977 00fa 03F44033 		and	r3, r3, #196608
 1978              		.loc 1 1044 80
 1979 00fe 03F58033 		add	r3, r3, #65536
 1980              		.loc 1 1044 102
 1981 0102 5B00     		lsls	r3, r3, #1
 1982              		.loc 1 1044 33
 1983 0104 1A0C     		lsrs	r2, r3, #16
 1984              		.loc 1 1044 31
 1985 0106 7B68     		ldr	r3, [r7, #4]
 1986 0108 9A62     		str	r2, [r3, #40]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 1987              		.loc 1 1045 48
 1988 010a 064B     		ldr	r3, .L133
 1989 010c 5B68     		ldr	r3, [r3, #4]
 1990              		.loc 1 1045 33
 1991 010e 1B0E     		lsrs	r3, r3, #24
 1992 0110 03F00F02 		and	r2, r3, #15
 1993              		.loc 1 1045 31
 1994 0114 7B68     		ldr	r3, [r7, #4]
 1995 0116 DA62     		str	r2, [r3, #44]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1996              		.loc 1 1046 1
 1997 0118 00BF     		nop
 1998 011a 0C37     		adds	r7, r7, #12
 1999              		.cfi_def_cfa_offset 4
 2000 011c BD46     		mov	sp, r7
 2001              		.cfi_def_cfa_register 13
 2002              		@ sp needed
 2003 011e 5DF8047B 		ldr	r7, [sp], #4
 2004              		.cfi_restore 7
 2005              		.cfi_def_cfa_offset 0
 2006 0122 7047     		bx	lr
 2007              	.L134:
 2008              		.align	2
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 55


 2009              	.L133:
 2010 0124 00380240 		.word	1073887232
 2011              		.cfi_endproc
 2012              	.LFE140:
 2014              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2015              		.align	1
 2016              		.global	HAL_RCC_GetClockConfig
 2017              		.syntax unified
 2018              		.thumb
 2019              		.thumb_func
 2021              	HAL_RCC_GetClockConfig:
 2022              	.LFB141:
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2023              		.loc 1 1057 1
 2024              		.cfi_startproc
 2025              		@ args = 0, pretend = 0, frame = 8
 2026              		@ frame_needed = 1, uses_anonymous_args = 0
 2027              		@ link register save eliminated.
 2028 0000 80B4     		push	{r7}
 2029              		.cfi_def_cfa_offset 4
 2030              		.cfi_offset 7, -4
 2031 0002 83B0     		sub	sp, sp, #12
 2032              		.cfi_def_cfa_offset 16
 2033 0004 00AF     		add	r7, sp, #0
 2034              		.cfi_def_cfa_register 7
 2035 0006 7860     		str	r0, [r7, #4]
 2036 0008 3960     		str	r1, [r7]
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2037              		.loc 1 1059 32
 2038 000a 7B68     		ldr	r3, [r7, #4]
 2039 000c 0F22     		movs	r2, #15
 2040 000e 1A60     		str	r2, [r3]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2041              		.loc 1 1062 51
 2042 0010 124B     		ldr	r3, .L136
 2043 0012 9B68     		ldr	r3, [r3, #8]
 2044              		.loc 1 1062 37
 2045 0014 03F00302 		and	r2, r3, #3
 2046              		.loc 1 1062 35
 2047 0018 7B68     		ldr	r3, [r7, #4]
 2048 001a 5A60     		str	r2, [r3, #4]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 56


 2049              		.loc 1 1065 52
 2050 001c 0F4B     		ldr	r3, .L136
 2051 001e 9B68     		ldr	r3, [r3, #8]
 2052              		.loc 1 1065 38
 2053 0020 03F0F002 		and	r2, r3, #240
 2054              		.loc 1 1065 36
 2055 0024 7B68     		ldr	r3, [r7, #4]
 2056 0026 9A60     		str	r2, [r3, #8]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2057              		.loc 1 1068 53
 2058 0028 0C4B     		ldr	r3, .L136
 2059 002a 9B68     		ldr	r3, [r3, #8]
 2060              		.loc 1 1068 39
 2061 002c 03F4E052 		and	r2, r3, #7168
 2062              		.loc 1 1068 37
 2063 0030 7B68     		ldr	r3, [r7, #4]
 2064 0032 DA60     		str	r2, [r3, #12]
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2065              		.loc 1 1071 54
 2066 0034 094B     		ldr	r3, .L136
 2067 0036 9B68     		ldr	r3, [r3, #8]
 2068              		.loc 1 1071 39
 2069 0038 DB08     		lsrs	r3, r3, #3
 2070 003a 03F4E052 		and	r2, r3, #7168
 2071              		.loc 1 1071 37
 2072 003e 7B68     		ldr	r3, [r7, #4]
 2073 0040 1A61     		str	r2, [r3, #16]
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2074              		.loc 1 1074 32
 2075 0042 074B     		ldr	r3, .L136+4
 2076 0044 1B68     		ldr	r3, [r3]
 2077              		.loc 1 1074 16
 2078 0046 03F00702 		and	r2, r3, #7
 2079              		.loc 1 1074 14
 2080 004a 3B68     		ldr	r3, [r7]
 2081 004c 1A60     		str	r2, [r3]
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2082              		.loc 1 1075 1
 2083 004e 00BF     		nop
 2084 0050 0C37     		adds	r7, r7, #12
 2085              		.cfi_def_cfa_offset 4
 2086 0052 BD46     		mov	sp, r7
 2087              		.cfi_def_cfa_register 13
 2088              		@ sp needed
 2089 0054 5DF8047B 		ldr	r7, [sp], #4
 2090              		.cfi_restore 7
 2091              		.cfi_def_cfa_offset 0
 2092 0058 7047     		bx	lr
 2093              	.L137:
 2094 005a 00BF     		.align	2
 2095              	.L136:
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 57


 2096 005c 00380240 		.word	1073887232
 2097 0060 003C0240 		.word	1073888256
 2098              		.cfi_endproc
 2099              	.LFE141:
 2101              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2102              		.align	1
 2103              		.global	HAL_RCC_NMI_IRQHandler
 2104              		.syntax unified
 2105              		.thumb
 2106              		.thumb_func
 2108              	HAL_RCC_NMI_IRQHandler:
 2109              	.LFB142:
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2110              		.loc 1 1083 1
 2111              		.cfi_startproc
 2112              		@ args = 0, pretend = 0, frame = 0
 2113              		@ frame_needed = 1, uses_anonymous_args = 0
 2114 0000 80B5     		push	{r7, lr}
 2115              		.cfi_def_cfa_offset 8
 2116              		.cfi_offset 7, -8
 2117              		.cfi_offset 14, -4
 2118 0002 00AF     		add	r7, sp, #0
 2119              		.cfi_def_cfa_register 7
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2120              		.loc 1 1085 6
 2121 0004 064B     		ldr	r3, .L141
 2122 0006 DB68     		ldr	r3, [r3, #12]
 2123 0008 03F08003 		and	r3, r3, #128
 2124              		.loc 1 1085 5
 2125 000c 802B     		cmp	r3, #128
 2126 000e 04D1     		bne	.L140
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2127              		.loc 1 1088 5
 2128 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2129              		.loc 1 1091 5
 2130 0014 034B     		ldr	r3, .L141+4
 2131 0016 8022     		movs	r2, #128
 2132 0018 1A70     		strb	r2, [r3]
 2133              	.L140:
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2134              		.loc 1 1093 1
 2135 001a 00BF     		nop
 2136 001c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 58


 2137              	.L142:
 2138 001e 00BF     		.align	2
 2139              	.L141:
 2140 0020 00380240 		.word	1073887232
 2141 0024 0E380240 		.word	1073887246
 2142              		.cfi_endproc
 2143              	.LFE142:
 2145              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2146              		.align	1
 2147              		.weak	HAL_RCC_CSSCallback
 2148              		.syntax unified
 2149              		.thumb
 2150              		.thumb_func
 2152              	HAL_RCC_CSSCallback:
 2153              	.LFB143:
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2154              		.loc 1 1100 1
 2155              		.cfi_startproc
 2156              		@ args = 0, pretend = 0, frame = 0
 2157              		@ frame_needed = 1, uses_anonymous_args = 0
 2158              		@ link register save eliminated.
 2159 0000 80B4     		push	{r7}
 2160              		.cfi_def_cfa_offset 4
 2161              		.cfi_offset 7, -4
 2162 0002 00AF     		add	r7, sp, #0
 2163              		.cfi_def_cfa_register 7
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2164              		.loc 1 1104 1
 2165 0004 00BF     		nop
 2166 0006 BD46     		mov	sp, r7
 2167              		.cfi_def_cfa_register 13
 2168              		@ sp needed
 2169 0008 5DF8047B 		ldr	r7, [sp], #4
 2170              		.cfi_restore 7
 2171              		.cfi_def_cfa_offset 0
 2172 000c 7047     		bx	lr
 2173              		.cfi_endproc
 2174              	.LFE143:
 2176              		.text
 2177              	.Letext0:
 2178              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2179              		.file 3 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2180              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_rcc.c
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:21     .text.HAL_RCC_DeInit:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:27     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:54     .text.HAL_RCC_OscConfig:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:60     .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:450    .text.HAL_RCC_OscConfig:00000240 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:455    .text.HAL_RCC_OscConfig:0000024c $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:804    .text.HAL_RCC_OscConfig:00000470 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:809    .text.HAL_RCC_OscConfig:0000047c $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:894    .text.HAL_RCC_OscConfig:000004ec $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:899    .text.HAL_RCC_ClockConfig:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:905    .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1438   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1202   .text.HAL_RCC_ClockConfig:000001b8 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1211   .text.HAL_RCC_MCOConfig:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1217   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1344   .text.HAL_RCC_MCOConfig:000000c4 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1351   .text.HAL_RCC_EnableCSS:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1357   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1386   .text.HAL_RCC_EnableCSS:00000014 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1391   .text.HAL_RCC_DisableCSS:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1397   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1426   .text.HAL_RCC_DisableCSS:00000014 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1432   .text.HAL_RCC_GetSysClockFreq:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1658   .text.HAL_RCC_GetSysClockFreq:00000180 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1665   .text.HAL_RCC_GetHCLKFreq:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1671   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1698   .text.HAL_RCC_GetHCLKFreq:00000014 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1703   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1709   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1741   .text.HAL_RCC_GetPCLK1Freq:00000020 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1747   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1753   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1785   .text.HAL_RCC_GetPCLK2Freq:00000020 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1791   .text.HAL_RCC_GetOscConfig:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:1797   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:2010   .text.HAL_RCC_GetOscConfig:00000124 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:2015   .text.HAL_RCC_GetClockConfig:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:2021   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:2096   .text.HAL_RCC_GetClockConfig:0000005c $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:2102   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:2108   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:2152   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:2140   .text.HAL_RCC_NMI_IRQHandler:00000020 $d
C:\Users\Korolev\AppData\Local\Temp\ccaZMaHX.s:2146   .text.HAL_RCC_CSSCallback:00000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
AHBPrescTable
SystemCoreClock
uwTickPrio
HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
