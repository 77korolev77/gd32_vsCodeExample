ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.global	counter
  21              		.section	.bss.counter,"aw",%nobits
  22              		.align	2
  25              	counter:
  26 0000 00000000 		.space	4
  27              		.global	seconds
  28              		.section	.bss.seconds,"aw",%nobits
  29              		.align	2
  32              	seconds:
  33 0000 00000000 		.space	4
  34              		.global	tiks
  35              		.section	.bss.tiks,"aw",%nobits
  36              		.align	2
  39              	tiks:
  40 0000 00000000 		.space	4
  41              		.global	VectorTable
  42              		.section	.bss.VectorTable,"aw",%nobits
  43              		.align	2
  46              	VectorTable:
  47 0000 00000000 		.space	4
  48              		.section	.text.main,"ax",%progbits
  49              		.align	1
  50              		.global	main
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  55              	main:
  56              	.LFB130:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 2


  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "gpio.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** uint32_t counter = 0;
  31:Core/Src/main.c **** uint32_t seconds = 0;
  32:Core/Src/main.c **** uint32_t tiks = 0;
  33:Core/Src/main.c **** uint32_t *VectorTable;
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 3


  57              		.loc 1 67 1
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 16
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 84B0     		sub	sp, sp, #16
  66              		.cfi_def_cfa_offset 24
  67 0004 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  68:Core/Src/main.c ****   // –∑–∞–ø–∏—Å—å –≤–µ–∫—Ç–æ—Ä–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–º—è—Ç—å, –ø–æ—
  69:Core/Src/main.c ****   // –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã—Å—Ç–∞–≤–∏—Ç—å –≤ –ª–∏–Ω–∫–æ–≤—â–∏–
  70:Core/Src/main.c ****   // –¥–∞—Ç–∞—à–∏—Ç - 1
  71:Core/Src/main.c ****   uint32_t BL_PROGRAMM_START_ADRESS = 0x08010008;                                             	
  69              		.loc 1 71 12
  70 0006 484B     		ldr	r3, .L5
  71 0008 BB60     		str	r3, [r7, #8]
  72:Core/Src/main.c ****   uint32_t MAIN_PROGRAM_RAM_START   = 0x2001BC00;
  72              		.loc 1 72 12
  73 000a 484B     		ldr	r3, .L5+4
  74 000c 7B60     		str	r3, [r7, #4]
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   uint32_t *VectorTable = (uint32_t *)(MAIN_PROGRAM_RAM_START);                        					
  75              		.loc 1 74 13
  76 000e 7B68     		ldr	r3, [r7, #4]
  77 0010 3B60     		str	r3, [r7]
  78              	.LBB7:
  75:Core/Src/main.c ****   for (uint8_t i = 0; i < 106; i++)
  79              		.loc 1 75 16
  80 0012 0023     		movs	r3, #0
  81 0014 FB73     		strb	r3, [r7, #15]
  82              		.loc 1 75 3
  83 0016 0DE0     		b	.L2
  84              	.L3:
  76:Core/Src/main.c ****   {
  77:Core/Src/main.c ****     VectorTable[i] = *(__IO uint32_t *)(BL_PROGRAMM_START_ADRESS + (i << 2));	 									
  85              		.loc 1 77 71 discriminator 3
  86 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  87 001a 9A00     		lsls	r2, r3, #2
  88              		.loc 1 77 66 discriminator 3
  89 001c BB68     		ldr	r3, [r7, #8]
  90 001e 1344     		add	r3, r3, r2
  91              		.loc 1 77 23 discriminator 3
  92 0020 1946     		mov	r1, r3
  93              		.loc 1 77 16 discriminator 3
  94 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  95 0024 9B00     		lsls	r3, r3, #2
  96 0026 3A68     		ldr	r2, [r7]
  97 0028 1344     		add	r3, r3, r2
  98              		.loc 1 77 22 discriminator 3
  99 002a 0A68     		ldr	r2, [r1]
 100              		.loc 1 77 20 discriminator 3
 101 002c 1A60     		str	r2, [r3]
  75:Core/Src/main.c ****   for (uint8_t i = 0; i < 106; i++)
 102              		.loc 1 75 33 discriminator 3
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 4


 103 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 104 0030 0133     		adds	r3, r3, #1
 105 0032 FB73     		strb	r3, [r7, #15]
 106              	.L2:
  75:Core/Src/main.c ****   for (uint8_t i = 0; i < 106; i++)
 107              		.loc 1 75 25 discriminator 1
 108 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 109 0036 692B     		cmp	r3, #105
 110 0038 EED9     		bls	.L3
 111              	.LBE7:
  78:Core/Src/main.c ****   }    
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   SCB->VTOR = MAIN_PROGRAM_RAM_START;
 112              		.loc 1 80 6
 113 003a 3D4A     		ldr	r2, .L5+8
 114              		.loc 1 80 13
 115 003c 7B68     		ldr	r3, [r7, #4]
 116 003e 9360     		str	r3, [r2, #8]
 117              	.LBB8:
 118              	.LBB9:
 119              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 5


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 6


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 120              		.loc 2 131 3
 121              		.syntax unified
 122              	@ 131 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 123 0040 62B6     		cpsie i
 124              	@ 0 "" 2
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 125              		.loc 2 132 1
 126              		.thumb
 127              		.syntax unified
 128 0042 00BF     		nop
 129              	.LBE9:
 130              	.LBE8:
  81:Core/Src/main.c ****   __enable_irq();
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 7


 131              		.loc 1 87 3
 132 0044 FFF7FEFF 		bl	HAL_Init
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
 133              		.loc 1 94 3
 134 0048 FFF7FEFF 		bl	SystemClock_Config
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 135              		.loc 1 101 3
 136 004c FFF7FEFF 		bl	MX_GPIO_Init
 137              	.L4:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Infinite loop */
 107:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 108:Core/Src/main.c ****   while (1)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     /* USER CODE END WHILE */
 111:Core/Src/main.c ****     HAL_GPIO_WritePin(sw1_GPIO_Port, sw1_Pin, GPIO_PIN_SET);
 138              		.loc 1 111 5 discriminator 1
 139 0050 0122     		movs	r2, #1
 140 0052 4FF48071 		mov	r1, #256
 141 0056 3748     		ldr	r0, .L5+12
 142 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 112:Core/Src/main.c ****     HAL_GPIO_WritePin(sw2_GPIO_Port, sw2_Pin, GPIO_PIN_RESET);
 143              		.loc 1 112 5 discriminator 1
 144 005c 0022     		movs	r2, #0
 145 005e 4FF48061 		mov	r1, #1024
 146 0062 3448     		ldr	r0, .L5+12
 147 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113:Core/Src/main.c ****     HAL_GPIO_WritePin(sw3_GPIO_Port, sw3_Pin, GPIO_PIN_RESET);
 148              		.loc 1 113 5 discriminator 1
 149 0068 0022     		movs	r2, #0
 150 006a 4FF48051 		mov	r1, #4096
 151 006e 3148     		ldr	r0, .L5+12
 152 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114:Core/Src/main.c **** 	  HAL_Delay(1000);
 153              		.loc 1 114 4 discriminator 1
 154 0074 4FF47A70 		mov	r0, #1000
 155 0078 FFF7FEFF 		bl	HAL_Delay
 115:Core/Src/main.c **** 	  HAL_GPIO_WritePin(sw1_GPIO_Port, sw1_Pin, GPIO_PIN_SET);
 156              		.loc 1 115 4 discriminator 1
 157 007c 0122     		movs	r2, #1
 158 007e 4FF48071 		mov	r1, #256
 159 0082 2C48     		ldr	r0, .L5+12
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 8


 160 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 116:Core/Src/main.c ****     HAL_GPIO_WritePin(sw2_GPIO_Port, sw2_Pin, GPIO_PIN_SET);
 161              		.loc 1 116 5 discriminator 1
 162 0088 0122     		movs	r2, #1
 163 008a 4FF48061 		mov	r1, #1024
 164 008e 2948     		ldr	r0, .L5+12
 165 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117:Core/Src/main.c ****     HAL_GPIO_WritePin(sw3_GPIO_Port, sw3_Pin, GPIO_PIN_RESET);
 166              		.loc 1 117 5 discriminator 1
 167 0094 0022     		movs	r2, #0
 168 0096 4FF48051 		mov	r1, #4096
 169 009a 2648     		ldr	r0, .L5+12
 170 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 118:Core/Src/main.c **** 	  HAL_Delay(1000);
 171              		.loc 1 118 4 discriminator 1
 172 00a0 4FF47A70 		mov	r0, #1000
 173 00a4 FFF7FEFF 		bl	HAL_Delay
 119:Core/Src/main.c ****     HAL_GPIO_WritePin(sw1_GPIO_Port, sw1_Pin, GPIO_PIN_SET);
 174              		.loc 1 119 5 discriminator 1
 175 00a8 0122     		movs	r2, #1
 176 00aa 4FF48071 		mov	r1, #256
 177 00ae 2148     		ldr	r0, .L5+12
 178 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120:Core/Src/main.c ****     HAL_GPIO_WritePin(sw2_GPIO_Port, sw2_Pin, GPIO_PIN_SET);
 179              		.loc 1 120 5 discriminator 1
 180 00b4 0122     		movs	r2, #1
 181 00b6 4FF48061 		mov	r1, #1024
 182 00ba 1E48     		ldr	r0, .L5+12
 183 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 121:Core/Src/main.c ****     HAL_GPIO_WritePin(sw3_GPIO_Port, sw3_Pin, GPIO_PIN_SET);
 184              		.loc 1 121 5 discriminator 1
 185 00c0 0122     		movs	r2, #1
 186 00c2 4FF48051 		mov	r1, #4096
 187 00c6 1B48     		ldr	r0, .L5+12
 188 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 122:Core/Src/main.c **** 	  HAL_Delay(1000);
 189              		.loc 1 122 4 discriminator 1
 190 00cc 4FF47A70 		mov	r0, #1000
 191 00d0 FFF7FEFF 		bl	HAL_Delay
 123:Core/Src/main.c ****     HAL_GPIO_WritePin(sw1_GPIO_Port, sw1_Pin, GPIO_PIN_RESET);
 192              		.loc 1 123 5 discriminator 1
 193 00d4 0022     		movs	r2, #0
 194 00d6 4FF48071 		mov	r1, #256
 195 00da 1648     		ldr	r0, .L5+12
 196 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 124:Core/Src/main.c ****     HAL_GPIO_WritePin(sw2_GPIO_Port, sw2_Pin, GPIO_PIN_RESET);
 197              		.loc 1 124 5 discriminator 1
 198 00e0 0022     		movs	r2, #0
 199 00e2 4FF48061 		mov	r1, #1024
 200 00e6 1348     		ldr	r0, .L5+12
 201 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 125:Core/Src/main.c ****     HAL_GPIO_WritePin(sw3_GPIO_Port, sw3_Pin, GPIO_PIN_RESET);
 202              		.loc 1 125 5 discriminator 1
 203 00ec 0022     		movs	r2, #0
 204 00ee 4FF48051 		mov	r1, #4096
 205 00f2 1048     		ldr	r0, .L5+12
 206 00f4 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 9


 126:Core/Src/main.c ****     counter++;
 207              		.loc 1 126 12 discriminator 1
 208 00f8 0F4B     		ldr	r3, .L5+16
 209 00fa 1B68     		ldr	r3, [r3]
 210 00fc 0133     		adds	r3, r3, #1
 211 00fe 0E4A     		ldr	r2, .L5+16
 212 0100 1360     		str	r3, [r2]
 127:Core/Src/main.c ****     HAL_Delay(200);
 213              		.loc 1 127 5 discriminator 1
 214 0102 C820     		movs	r0, #200
 215 0104 FFF7FEFF 		bl	HAL_Delay
 128:Core/Src/main.c ****     tiks = HAL_GetTick();
 216              		.loc 1 128 12 discriminator 1
 217 0108 FFF7FEFF 		bl	HAL_GetTick
 218 010c 0346     		mov	r3, r0
 219              		.loc 1 128 10 discriminator 1
 220 010e 0B4A     		ldr	r2, .L5+20
 221 0110 1360     		str	r3, [r2]
 129:Core/Src/main.c ****     seconds = tiks/1000;
 222              		.loc 1 129 19 discriminator 1
 223 0112 0A4B     		ldr	r3, .L5+20
 224 0114 1B68     		ldr	r3, [r3]
 225 0116 0A4A     		ldr	r2, .L5+24
 226 0118 A2FB0323 		umull	r2, r3, r2, r3
 227 011c 9B09     		lsrs	r3, r3, #6
 228              		.loc 1 129 13 discriminator 1
 229 011e 094A     		ldr	r2, .L5+28
 230 0120 1360     		str	r3, [r2]
 111:Core/Src/main.c ****     HAL_GPIO_WritePin(sw2_GPIO_Port, sw2_Pin, GPIO_PIN_RESET);
 231              		.loc 1 111 5 discriminator 1
 232 0122 00BF     		nop
 233 0124 94E7     		b	.L4
 234              	.L6:
 235 0126 00BF     		.align	2
 236              	.L5:
 237 0128 08000108 		.word	134283272
 238 012c 00BC0120 		.word	536984576
 239 0130 00ED00E0 		.word	-536810240
 240 0134 00100240 		.word	1073876992
 241 0138 00000000 		.word	counter
 242 013c 00000000 		.word	tiks
 243 0140 D34D6210 		.word	274877907
 244 0144 00000000 		.word	seconds
 245              		.cfi_endproc
 246              	.LFE130:
 248              		.section	.text.SystemClock_Config,"ax",%progbits
 249              		.align	1
 250              		.global	SystemClock_Config
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 255              	SystemClock_Config:
 256              	.LFB131:
 130:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c ****   /* USER CODE END 3 */
 133:Core/Src/main.c **** }
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 10


 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****   * @brief System Clock Configuration
 137:Core/Src/main.c ****   * @retval None
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c **** void SystemClock_Config(void)
 140:Core/Src/main.c **** {
 257              		.loc 1 140 1
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 80
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 94B0     		sub	sp, sp, #80
 266              		.cfi_def_cfa_offset 88
 267 0004 00AF     		add	r7, sp, #0
 268              		.cfi_def_cfa_register 7
 141:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 269              		.loc 1 141 22
 270 0006 07F12003 		add	r3, r7, #32
 271 000a 3022     		movs	r2, #48
 272 000c 0021     		movs	r1, #0
 273 000e 1846     		mov	r0, r3
 274 0010 FFF7FEFF 		bl	memset
 142:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 275              		.loc 1 142 22
 276 0014 07F10C03 		add	r3, r7, #12
 277 0018 0022     		movs	r2, #0
 278 001a 1A60     		str	r2, [r3]
 279 001c 5A60     		str	r2, [r3, #4]
 280 001e 9A60     		str	r2, [r3, #8]
 281 0020 DA60     		str	r2, [r3, #12]
 282 0022 1A61     		str	r2, [r3, #16]
 283              	.LBB10:
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 284              		.loc 1 146 3
 285 0024 0023     		movs	r3, #0
 286 0026 BB60     		str	r3, [r7, #8]
 287 0028 284B     		ldr	r3, .L11
 288 002a 1B6C     		ldr	r3, [r3, #64]
 289 002c 274A     		ldr	r2, .L11
 290 002e 43F08053 		orr	r3, r3, #268435456
 291 0032 1364     		str	r3, [r2, #64]
 292 0034 254B     		ldr	r3, .L11
 293 0036 1B6C     		ldr	r3, [r3, #64]
 294 0038 03F08053 		and	r3, r3, #268435456
 295 003c BB60     		str	r3, [r7, #8]
 296 003e BB68     		ldr	r3, [r7, #8]
 297              	.LBE10:
 298              	.LBB11:
 147:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 299              		.loc 1 147 3
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 11


 300 0040 0023     		movs	r3, #0
 301 0042 7B60     		str	r3, [r7, #4]
 302 0044 224B     		ldr	r3, .L11+4
 303 0046 1B68     		ldr	r3, [r3]
 304 0048 214A     		ldr	r2, .L11+4
 305 004a 43F48043 		orr	r3, r3, #16384
 306 004e 1360     		str	r3, [r2]
 307 0050 1F4B     		ldr	r3, .L11+4
 308 0052 1B68     		ldr	r3, [r3]
 309 0054 03F48043 		and	r3, r3, #16384
 310 0058 7B60     		str	r3, [r7, #4]
 311 005a 7B68     		ldr	r3, [r7, #4]
 312              	.LBE11:
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 150:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 313              		.loc 1 152 36
 314 005c 0123     		movs	r3, #1
 315 005e 3B62     		str	r3, [r7, #32]
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 316              		.loc 1 153 30
 317 0060 4FF48033 		mov	r3, #65536
 318 0064 7B62     		str	r3, [r7, #36]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 319              		.loc 1 154 34
 320 0066 0223     		movs	r3, #2
 321 0068 BB63     		str	r3, [r7, #56]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 322              		.loc 1 155 35
 323 006a 4FF48003 		mov	r3, #4194304
 324 006e FB63     		str	r3, [r7, #60]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 325              		.loc 1 156 30
 326 0070 0C23     		movs	r3, #12
 327 0072 3B64     		str	r3, [r7, #64]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 160;
 328              		.loc 1 157 30
 329 0074 A023     		movs	r3, #160
 330 0076 7B64     		str	r3, [r7, #68]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 331              		.loc 1 158 30
 332 0078 0223     		movs	r3, #2
 333 007a BB64     		str	r3, [r7, #72]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 334              		.loc 1 159 30
 335 007c 0423     		movs	r3, #4
 336 007e FB64     		str	r3, [r7, #76]
 160:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 337              		.loc 1 160 7
 338 0080 07F12003 		add	r3, r7, #32
 339 0084 1846     		mov	r0, r3
 340 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 341 008a 0346     		mov	r3, r0
 342              		.loc 1 160 6
 343 008c 002B     		cmp	r3, #0
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 12


 344 008e 01D0     		beq	.L8
 161:Core/Src/main.c ****   {
 162:Core/Src/main.c ****     Error_Handler();
 345              		.loc 1 162 5
 346 0090 FFF7FEFF 		bl	Error_Handler
 347              	.L8:
 163:Core/Src/main.c ****   }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 348              		.loc 1 167 31
 349 0094 0F23     		movs	r3, #15
 350 0096 FB60     		str	r3, [r7, #12]
 168:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 351              		.loc 1 169 34
 352 0098 0223     		movs	r3, #2
 353 009a 3B61     		str	r3, [r7, #16]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 354              		.loc 1 170 35
 355 009c 0023     		movs	r3, #0
 356 009e 7B61     		str	r3, [r7, #20]
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 357              		.loc 1 171 36
 358 00a0 4FF4A053 		mov	r3, #5120
 359 00a4 BB61     		str	r3, [r7, #24]
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 360              		.loc 1 172 36
 361 00a6 4FF4A053 		mov	r3, #5120
 362 00aa FB61     		str	r3, [r7, #28]
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 363              		.loc 1 174 7
 364 00ac 07F10C03 		add	r3, r7, #12
 365 00b0 0521     		movs	r1, #5
 366 00b2 1846     		mov	r0, r3
 367 00b4 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 368 00b8 0346     		mov	r3, r0
 369              		.loc 1 174 6
 370 00ba 002B     		cmp	r3, #0
 371 00bc 01D0     		beq	.L10
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 372              		.loc 1 176 5
 373 00be FFF7FEFF 		bl	Error_Handler
 374              	.L10:
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** }
 375              		.loc 1 178 1
 376 00c2 00BF     		nop
 377 00c4 5037     		adds	r7, r7, #80
 378              		.cfi_def_cfa_offset 8
 379 00c6 BD46     		mov	sp, r7
 380              		.cfi_def_cfa_register 13
 381              		@ sp needed
 382 00c8 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 13


 383              	.L12:
 384 00ca 00BF     		.align	2
 385              	.L11:
 386 00cc 00380240 		.word	1073887232
 387 00d0 00700040 		.word	1073770496
 388              		.cfi_endproc
 389              	.LFE131:
 391              		.section	.text.Error_Handler,"ax",%progbits
 392              		.align	1
 393              		.global	Error_Handler
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 398              	Error_Handler:
 399              	.LFB132:
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE END 4 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** void Error_Handler(void)
 189:Core/Src/main.c **** {
 400              		.loc 1 189 1
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 1, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405 0000 80B4     		push	{r7}
 406              		.cfi_def_cfa_offset 4
 407              		.cfi_offset 7, -4
 408 0002 00AF     		add	r7, sp, #0
 409              		.cfi_def_cfa_register 7
 410              	.LBB12:
 411              	.LBB13:
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 412              		.loc 2 142 3
 413              		.syntax unified
 414              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 415 0004 72B6     		cpsid i
 416              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 417              		.loc 2 143 1
 418              		.thumb
 419              		.syntax unified
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 14


 420 0006 00BF     		nop
 421              	.L14:
 422              	.LBE13:
 423              	.LBE12:
 190:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 191:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 192:Core/Src/main.c ****   __disable_irq();
 193:Core/Src/main.c ****   while (1)
 424              		.loc 1 193 9 discriminator 1
 425 0008 00BF     		nop
 426 000a FDE7     		b	.L14
 427              		.cfi_endproc
 428              	.LFE132:
 430              		.text
 431              	.Letext0:
 432              		.file 3 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 433              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 434              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 435              		.file 6 "Core/Inc/gpio.h"
ARM GAS  C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:25     .bss.counter:00000000 counter
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:22     .bss.counter:00000000 $d
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:32     .bss.seconds:00000000 seconds
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:29     .bss.seconds:00000000 $d
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:39     .bss.tiks:00000000 tiks
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:36     .bss.tiks:00000000 $d
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:46     .bss.VectorTable:00000000 VectorTable
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:43     .bss.VectorTable:00000000 $d
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:49     .text.main:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:55     .text.main:00000000 main
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:255    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:237    .text.main:00000128 $d
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:249    .text.SystemClock_Config:00000000 $t
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:398    .text.Error_Handler:00000000 Error_Handler
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:386    .text.SystemClock_Config:000000cc $d
C:\Users\Korolev\AppData\Local\Temp\ccOeWJQT.s:392    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
MX_GPIO_Init
HAL_GPIO_WritePin
HAL_Delay
HAL_GetTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
